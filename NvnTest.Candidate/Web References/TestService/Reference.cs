//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
// 
#pragma warning disable 1591

namespace NvnTest.Candidate.TestService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientServiceSoap", Namespace="http://www.coderlabz.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestAnswerBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDataBase))]
    public partial class ClientService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTestStartedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCandidateDisqualifiedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompileCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCompileCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplateCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWebsitesVisitedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApplicationsIgnoredOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendErrorMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTestImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWebPagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientService() {
            this.Url = global::NvnTest.Candidate.Properties.Settings.Default.NvnTest_Client_TestService_ClientService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event GetQuestionsCompletedEventHandler GetQuestionsCompleted;
        
        /// <remarks/>
        public event UpdateTestStartedCompletedEventHandler UpdateTestStartedCompleted;
        
        /// <remarks/>
        public event SetCandidateDisqualifiedCompletedEventHandler SetCandidateDisqualifiedCompleted;
        
        /// <remarks/>
        public event GetTestInfoCompletedEventHandler GetTestInfoCompleted;
        
        /// <remarks/>
        public event CompileCodeCompletedEventHandler CompileCodeCompleted;
        
        /// <remarks/>
        public event AutoCompileCodeCompletedEventHandler AutoCompileCodeCompleted;
        
        /// <remarks/>
        public event GetTemplateCodeCompletedEventHandler GetTemplateCodeCompleted;
        
        /// <remarks/>
        public event SubmitAnswersCompletedEventHandler SubmitAnswersCompleted;
        
        /// <remarks/>
        public event UpdateWebsitesVisitedCompletedEventHandler UpdateWebsitesVisitedCompleted;
        
        /// <remarks/>
        public event UpdateApplicationsIgnoredCompletedEventHandler UpdateApplicationsIgnoredCompleted;
        
        /// <remarks/>
        public event SendErrorMessageCompletedEventHandler SendErrorMessageCompleted;
        
        /// <remarks/>
        public event SubmitTestImagesCompletedEventHandler SubmitTestImagesCompleted;
        
        /// <remarks/>
        public event SaveWebPagesCompletedEventHandler SaveWebPagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/Authenticate", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestSchedule Authenticate(string email, string password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        email,
                        password});
            return ((TestSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string email, string password) {
            this.AuthenticateAsync(email, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string email, string password, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        email,
                        password}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestions", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Questions GetQuestions(uint paperId, string email, string password) {
            object[] results = this.Invoke("GetQuestions", new object[] {
                        paperId,
                        email,
                        password});
            return ((Questions)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(uint paperId, string email, string password) {
            this.GetQuestionsAsync(paperId, email, password, null);
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(uint paperId, string email, string password, object userState) {
            if ((this.GetQuestionsOperationCompleted == null)) {
                this.GetQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetQuestions", new object[] {
                        paperId,
                        email,
                        password}, this.GetQuestionsOperationCompleted, userState);
        }
        
        private void OnGetQuestionsOperationCompleted(object arg) {
            if ((this.GetQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionsCompleted(this, new GetQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateTestStarted", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTestStarted(uint testId, string email, string password) {
            object[] results = this.Invoke("UpdateTestStarted", new object[] {
                        testId,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTestStartedAsync(uint testId, string email, string password) {
            this.UpdateTestStartedAsync(testId, email, password, null);
        }
        
        /// <remarks/>
        public void UpdateTestStartedAsync(uint testId, string email, string password, object userState) {
            if ((this.UpdateTestStartedOperationCompleted == null)) {
                this.UpdateTestStartedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTestStartedOperationCompleted);
            }
            this.InvokeAsync("UpdateTestStarted", new object[] {
                        testId,
                        email,
                        password}, this.UpdateTestStartedOperationCompleted, userState);
        }
        
        private void OnUpdateTestStartedOperationCompleted(object arg) {
            if ((this.UpdateTestStartedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTestStartedCompleted(this, new UpdateTestStartedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SetCandidateDisqualified", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetCandidateDisqualified(TestSchedule schedule, string email, string password) {
            object[] results = this.Invoke("SetCandidateDisqualified", new object[] {
                        schedule,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetCandidateDisqualifiedAsync(TestSchedule schedule, string email, string password) {
            this.SetCandidateDisqualifiedAsync(schedule, email, password, null);
        }
        
        /// <remarks/>
        public void SetCandidateDisqualifiedAsync(TestSchedule schedule, string email, string password, object userState) {
            if ((this.SetCandidateDisqualifiedOperationCompleted == null)) {
                this.SetCandidateDisqualifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCandidateDisqualifiedOperationCompleted);
            }
            this.InvokeAsync("SetCandidateDisqualified", new object[] {
                        schedule,
                        email,
                        password}, this.SetCandidateDisqualifiedOperationCompleted, userState);
        }
        
        private void OnSetCandidateDisqualifiedOperationCompleted(object arg) {
            if ((this.SetCandidateDisqualifiedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCandidateDisqualifiedCompleted(this, new SetCandidateDisqualifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestInfo", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestInfo GetTestInfo(string email, string password) {
            object[] results = this.Invoke("GetTestInfo", new object[] {
                        email,
                        password});
            return ((TestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestInfoAsync(string email, string password) {
            this.GetTestInfoAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetTestInfoAsync(string email, string password, object userState) {
            if ((this.GetTestInfoOperationCompleted == null)) {
                this.GetTestInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestInfoOperationCompleted);
            }
            this.InvokeAsync("GetTestInfo", new object[] {
                        email,
                        password}, this.GetTestInfoOperationCompleted, userState);
        }
        
        private void OnGetTestInfoOperationCompleted(object arg) {
            if ((this.GetTestInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestInfoCompleted(this, new GetTestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/CompileCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompilerMessage CompileCode(string code, string sessionId, ProgrammingAnswerType answerType, string email, string password) {
            object[] results = this.Invoke("CompileCode", new object[] {
                        code,
                        sessionId,
                        answerType,
                        email,
                        password});
            return ((CompilerMessage)(results[0]));
        }
        
        /// <remarks/>
        public void CompileCodeAsync(string code, string sessionId, ProgrammingAnswerType answerType, string email, string password) {
            this.CompileCodeAsync(code, sessionId, answerType, email, password, null);
        }
        
        /// <remarks/>
        public void CompileCodeAsync(string code, string sessionId, ProgrammingAnswerType answerType, string email, string password, object userState) {
            if ((this.CompileCodeOperationCompleted == null)) {
                this.CompileCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompileCodeOperationCompleted);
            }
            this.InvokeAsync("CompileCode", new object[] {
                        code,
                        sessionId,
                        answerType,
                        email,
                        password}, this.CompileCodeOperationCompleted, userState);
        }
        
        private void OnCompileCodeOperationCompleted(object arg) {
            if ((this.CompileCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompileCodeCompleted(this, new CompileCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/AutoCompileCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompilerMessage AutoCompileCode(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, string email, string password) {
            object[] results = this.Invoke("AutoCompileCode", new object[] {
                        question,
                        code,
                        sessionId,
                        answerType,
                        email,
                        password});
            return ((CompilerMessage)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCompileCodeAsync(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, string email, string password) {
            this.AutoCompileCodeAsync(question, code, sessionId, answerType, email, password, null);
        }
        
        /// <remarks/>
        public void AutoCompileCodeAsync(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, string email, string password, object userState) {
            if ((this.AutoCompileCodeOperationCompleted == null)) {
                this.AutoCompileCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCompileCodeOperationCompleted);
            }
            this.InvokeAsync("AutoCompileCode", new object[] {
                        question,
                        code,
                        sessionId,
                        answerType,
                        email,
                        password}, this.AutoCompileCodeOperationCompleted, userState);
        }
        
        private void OnAutoCompileCodeOperationCompleted(object arg) {
            if ((this.AutoCompileCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCompileCodeCompleted(this, new AutoCompileCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTemplateCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTemplateCode(AutoProgrammingQuestion question, ProgrammingAnswerType answerType, string email, string password) {
            object[] results = this.Invoke("GetTemplateCode", new object[] {
                        question,
                        answerType,
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplateCodeAsync(AutoProgrammingQuestion question, ProgrammingAnswerType answerType, string email, string password) {
            this.GetTemplateCodeAsync(question, answerType, email, password, null);
        }
        
        /// <remarks/>
        public void GetTemplateCodeAsync(AutoProgrammingQuestion question, ProgrammingAnswerType answerType, string email, string password, object userState) {
            if ((this.GetTemplateCodeOperationCompleted == null)) {
                this.GetTemplateCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplateCodeOperationCompleted);
            }
            this.InvokeAsync("GetTemplateCode", new object[] {
                        question,
                        answerType,
                        email,
                        password}, this.GetTemplateCodeOperationCompleted, userState);
        }
        
        private void OnGetTemplateCodeOperationCompleted(object arg) {
            if ((this.GetTemplateCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplateCodeCompleted(this, new GetTemplateCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SubmitAnswers", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitAnswers(TestAnswers answers, TestSchedule schedule, string email, string password) {
            object[] results = this.Invoke("SubmitAnswers", new object[] {
                        answers,
                        schedule,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitAnswersAsync(TestAnswers answers, TestSchedule schedule, string email, string password) {
            this.SubmitAnswersAsync(answers, schedule, email, password, null);
        }
        
        /// <remarks/>
        public void SubmitAnswersAsync(TestAnswers answers, TestSchedule schedule, string email, string password, object userState) {
            if ((this.SubmitAnswersOperationCompleted == null)) {
                this.SubmitAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitAnswersOperationCompleted);
            }
            this.InvokeAsync("SubmitAnswers", new object[] {
                        answers,
                        schedule,
                        email,
                        password}, this.SubmitAnswersOperationCompleted, userState);
        }
        
        private void OnSubmitAnswersOperationCompleted(object arg) {
            if ((this.SubmitAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitAnswersCompleted(this, new SubmitAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateWebsitesVisited", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateWebsitesVisited(uint testId, string urls, string email, string password) {
            object[] results = this.Invoke("UpdateWebsitesVisited", new object[] {
                        testId,
                        urls,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWebsitesVisitedAsync(uint testId, string urls, string email, string password) {
            this.UpdateWebsitesVisitedAsync(testId, urls, email, password, null);
        }
        
        /// <remarks/>
        public void UpdateWebsitesVisitedAsync(uint testId, string urls, string email, string password, object userState) {
            if ((this.UpdateWebsitesVisitedOperationCompleted == null)) {
                this.UpdateWebsitesVisitedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWebsitesVisitedOperationCompleted);
            }
            this.InvokeAsync("UpdateWebsitesVisited", new object[] {
                        testId,
                        urls,
                        email,
                        password}, this.UpdateWebsitesVisitedOperationCompleted, userState);
        }
        
        private void OnUpdateWebsitesVisitedOperationCompleted(object arg) {
            if ((this.UpdateWebsitesVisitedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWebsitesVisitedCompleted(this, new UpdateWebsitesVisitedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateApplicationsIgnored", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateApplicationsIgnored(uint testId, string apps, string email, string password) {
            object[] results = this.Invoke("UpdateApplicationsIgnored", new object[] {
                        testId,
                        apps,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateApplicationsIgnoredAsync(uint testId, string apps, string email, string password) {
            this.UpdateApplicationsIgnoredAsync(testId, apps, email, password, null);
        }
        
        /// <remarks/>
        public void UpdateApplicationsIgnoredAsync(uint testId, string apps, string email, string password, object userState) {
            if ((this.UpdateApplicationsIgnoredOperationCompleted == null)) {
                this.UpdateApplicationsIgnoredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationsIgnoredOperationCompleted);
            }
            this.InvokeAsync("UpdateApplicationsIgnored", new object[] {
                        testId,
                        apps,
                        email,
                        password}, this.UpdateApplicationsIgnoredOperationCompleted, userState);
        }
        
        private void OnUpdateApplicationsIgnoredOperationCompleted(object arg) {
            if ((this.UpdateApplicationsIgnoredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationsIgnoredCompleted(this, new UpdateApplicationsIgnoredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SendErrorMessage", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendErrorMessage(string message, string email, string password) {
            this.Invoke("SendErrorMessage", new object[] {
                        message,
                        email,
                        password});
        }
        
        /// <remarks/>
        public void SendErrorMessageAsync(string message, string email, string password) {
            this.SendErrorMessageAsync(message, email, password, null);
        }
        
        /// <remarks/>
        public void SendErrorMessageAsync(string message, string email, string password, object userState) {
            if ((this.SendErrorMessageOperationCompleted == null)) {
                this.SendErrorMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendErrorMessageOperationCompleted);
            }
            this.InvokeAsync("SendErrorMessage", new object[] {
                        message,
                        email,
                        password}, this.SendErrorMessageOperationCompleted, userState);
        }
        
        private void OnSendErrorMessageOperationCompleted(object arg) {
            if ((this.SendErrorMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendErrorMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SubmitTestImages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitTestImages(TestImage[] testImages, uint testId, string email, string password) {
            object[] results = this.Invoke("SubmitTestImages", new object[] {
                        testImages,
                        testId,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitTestImagesAsync(TestImage[] testImages, uint testId, string email, string password) {
            this.SubmitTestImagesAsync(testImages, testId, email, password, null);
        }
        
        /// <remarks/>
        public void SubmitTestImagesAsync(TestImage[] testImages, uint testId, string email, string password, object userState) {
            if ((this.SubmitTestImagesOperationCompleted == null)) {
                this.SubmitTestImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTestImagesOperationCompleted);
            }
            this.InvokeAsync("SubmitTestImages", new object[] {
                        testImages,
                        testId,
                        email,
                        password}, this.SubmitTestImagesOperationCompleted, userState);
        }
        
        private void OnSubmitTestImagesOperationCompleted(object arg) {
            if ((this.SubmitTestImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTestImagesCompleted(this, new SubmitTestImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SaveWebPages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveWebPages(WebNode webNode, string uniqueId, string email, string password) {
            object[] results = this.Invoke("SaveWebPages", new object[] {
                        webNode,
                        uniqueId,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWebPagesAsync(WebNode webNode, string uniqueId, string email, string password) {
            this.SaveWebPagesAsync(webNode, uniqueId, email, password, null);
        }
        
        /// <remarks/>
        public void SaveWebPagesAsync(WebNode webNode, string uniqueId, string email, string password, object userState) {
            if ((this.SaveWebPagesOperationCompleted == null)) {
                this.SaveWebPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWebPagesOperationCompleted);
            }
            this.InvokeAsync("SaveWebPages", new object[] {
                        webNode,
                        uniqueId,
                        email,
                        password}, this.SaveWebPagesOperationCompleted, userState);
        }
        
        private void OnSaveWebPagesOperationCompleted(object arg) {
            if ((this.SaveWebPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWebPagesCompleted(this, new SaveWebPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestSchedule : ServiceDataBase {
        
        private uint paperIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string passwordField;
        
        private System.DateTime scheduleDateTimeField;
        
        private uint daysLimitField;
        
        private uint durationField;
        
        private System.DateTime testTakenDateTimeField;
        
        private TestStatus statusField;
        
        private bool liveImageField;
        
        private bool webReferenceField;
        
        private TestAnswers testAnswersField;
        
        /// <remarks/>
        public uint PaperId {
            get {
                return this.paperIdField;
            }
            set {
                this.paperIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ScheduleDateTime {
            get {
                return this.scheduleDateTimeField;
            }
            set {
                this.scheduleDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public uint DaysLimit {
            get {
                return this.daysLimitField;
            }
            set {
                this.daysLimitField = value;
            }
        }
        
        /// <remarks/>
        public uint Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TestTakenDateTime {
            get {
                return this.testTakenDateTimeField;
            }
            set {
                this.testTakenDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public TestStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool LiveImage {
            get {
                return this.liveImageField;
            }
            set {
                this.liveImageField = value;
            }
        }
        
        /// <remarks/>
        public bool WebReference {
            get {
                return this.webReferenceField;
            }
            set {
                this.webReferenceField = value;
            }
        }
        
        /// <remarks/>
        public TestAnswers TestAnswers {
            get {
                return this.testAnswersField;
            }
            set {
                this.testAnswersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum TestStatus {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Taken,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        Disqualified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestAnswers {
        
        private uint testIdField;
        
        private ObjectiveQuestionTestAnswer[] objectiveQuestionTestAnswersField;
        
        private SqlQuestionTestAnswer[] sqlQuestionTestAnswersField;
        
        private ProgrammingQuestionTestAnswer[] programmingQuestionTestAnswersField;
        
        private AutoProgrammingQuestionTestAnswer[] autoProgrammingQuestionTestAnswersField;
        
        private WebProgrammingQuestionTestAnswer[] webPogrammingQuestionTestAnswersField;
        
        /// <remarks/>
        public uint TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public ObjectiveQuestionTestAnswer[] ObjectiveQuestionTestAnswers {
            get {
                return this.objectiveQuestionTestAnswersField;
            }
            set {
                this.objectiveQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public SqlQuestionTestAnswer[] SqlQuestionTestAnswers {
            get {
                return this.sqlQuestionTestAnswersField;
            }
            set {
                this.sqlQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingQuestionTestAnswer[] ProgrammingQuestionTestAnswers {
            get {
                return this.programmingQuestionTestAnswersField;
            }
            set {
                this.programmingQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public AutoProgrammingQuestionTestAnswer[] AutoProgrammingQuestionTestAnswers {
            get {
                return this.autoProgrammingQuestionTestAnswersField;
            }
            set {
                this.autoProgrammingQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public WebProgrammingQuestionTestAnswer[] WebPogrammingQuestionTestAnswers {
            get {
                return this.webPogrammingQuestionTestAnswersField;
            }
            set {
                this.webPogrammingQuestionTestAnswersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ObjectiveQuestionTestAnswer : TestAnswerBase {
        
        private int[] selectedOptionsField;
        
        /// <remarks/>
        public int[] SelectedOptions {
            get {
                return this.selectedOptionsField;
            }
            set {
                this.selectedOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestionTestAnswer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class TestAnswerBase {
        
        private uint idField;
        
        private uint testIdField;
        
        private uint questionIdField;
        
        private QuestionType typeField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public uint QuestionId {
            get {
                return this.questionIdField;
            }
            set {
                this.questionIdField = value;
            }
        }
        
        /// <remarks/>
        public QuestionType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum QuestionType {
        
        /// <remarks/>
        Objective,
        
        /// <remarks/>
        Sql,
        
        /// <remarks/>
        Programming,
        
        /// <remarks/>
        AutoProgramming,
        
        /// <remarks/>
        WebProgramming,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestImage {
        
        private string nameField;
        
        private string streamField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Stream {
            get {
                return this.streamField;
            }
            set {
                this.streamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class CompilerMessage {
        
        private bool successField;
        
        private string exeField;
        
        private string exe1Field;
        
        private string[] errorMessagesField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe1 {
            get {
                return this.exe1Field;
            }
            set {
                this.exe1Field = value;
            }
        }
        
        /// <remarks/>
        public string[] ErrorMessages {
            get {
                return this.errorMessagesField;
            }
            set {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestInfo {
        
        private string employerNameField;
        
        private int questionsCountField;
        
        /// <remarks/>
        public string EmployerName {
            get {
                return this.employerNameField;
            }
            set {
                this.employerNameField = value;
            }
        }
        
        /// <remarks/>
        public int QuestionsCount {
            get {
                return this.questionsCountField;
            }
            set {
                this.questionsCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class Questions {
        
        private ObjectiveQuestion[] objectiveQuestionsField;
        
        private SqlQuestion[] sQLQuestionsField;
        
        private ProgrammingQuestion[] programmingQuestionsField;
        
        private AutoProgrammingQuestion[] autoProgrammingQuestionsField;
        
        private WebProgrammingQuestion[] webProgrammingQuestionsField;
        
        /// <remarks/>
        public ObjectiveQuestion[] ObjectiveQuestions {
            get {
                return this.objectiveQuestionsField;
            }
            set {
                this.objectiveQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public SqlQuestion[] SQLQuestions {
            get {
                return this.sQLQuestionsField;
            }
            set {
                this.sQLQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingQuestion[] ProgrammingQuestions {
            get {
                return this.programmingQuestionsField;
            }
            set {
                this.programmingQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public AutoProgrammingQuestion[] AutoProgrammingQuestions {
            get {
                return this.autoProgrammingQuestionsField;
            }
            set {
                this.autoProgrammingQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public WebProgrammingQuestion[] WebProgrammingQuestions {
            get {
                return this.webProgrammingQuestionsField;
            }
            set {
                this.webProgrammingQuestionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ObjectiveQuestion : QuestionBase {
        
        private string[] optionsField;
        
        private string[] answersField;
        
        /// <remarks/>
        public string[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestion))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class QuestionBase : ServiceDataBase {
        
        private QuestionType typeField;
        
        private string descField;
        
        private string[] categoriesField;
        
        private uint difficultyLevelField;
        
        private System.DateTime dateTimeCreatedField;
        
        private System.DateTime dateTimeModifiedField;
        
        private bool deletedField;
        
        /// <remarks/>
        public QuestionType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        public string[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public uint DifficultyLevel {
            get {
                return this.difficultyLevelField;
            }
            set {
                this.difficultyLevelField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeCreated {
            get {
                return this.dateTimeCreatedField;
            }
            set {
                this.dateTimeCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeModified {
            get {
                return this.dateTimeModifiedField;
            }
            set {
                this.dateTimeModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestSchedule))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class ServiceDataBase {
        
        private uint idField;
        
        private uint adminIdField;
        
        private string tempIdField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint AdminId {
            get {
                return this.adminIdField;
            }
            set {
                this.adminIdField = value;
            }
        }
        
        /// <remarks/>
        public string TempId {
            get {
                return this.tempIdField;
            }
            set {
                this.tempIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlQuestion : QuestionBase {
        
        private SqlTable[] tablesField;
        
        private string expectedResultSqlField;
        
        /// <remarks/>
        public SqlTable[] Tables {
            get {
                return this.tablesField;
            }
            set {
                this.tablesField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedResultSql {
            get {
                return this.expectedResultSqlField;
            }
            set {
                this.expectedResultSqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlTable {
        
        private string tableNameField;
        
        private string createTableSqlField;
        
        private string tableDataSqlField;
        
        /// <remarks/>
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreateTableSql {
            get {
                return this.createTableSqlField;
            }
            set {
                this.createTableSqlField = value;
            }
        }
        
        /// <remarks/>
        public string TableDataSql {
            get {
                return this.tableDataSqlField;
            }
            set {
                this.tableDataSqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ProgrammingQuestion : QuestionBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoProgrammingQuestion : QuestionBase {
        
        private AutoQuestionSignatureConfig configField;
        
        private AutoQuestionTestCase[] testCasesField;
        
        /// <remarks/>
        public AutoQuestionSignatureConfig Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
        
        /// <remarks/>
        public AutoQuestionTestCase[] TestCases {
            get {
                return this.testCasesField;
            }
            set {
                this.testCasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoQuestionSignatureConfig {
        
        private AutoQuestionValueType returnTypeField;
        
        private string functionNameField;
        
        private FunctionInput[] inputsField;
        
        /// <remarks/>
        public AutoQuestionValueType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
        
        /// <remarks/>
        public FunctionInput[] Inputs {
            get {
                return this.inputsField;
            }
            set {
                this.inputsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum AutoQuestionValueType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Boolean,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class FunctionInput {
        
        private AutoQuestionValueType argTypeField;
        
        private string nameField;
        
        /// <remarks/>
        public AutoQuestionValueType ArgType {
            get {
                return this.argTypeField;
            }
            set {
                this.argTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoQuestionTestCase {
        
        private bool isAllowedInTestModeField;
        
        private string expectedValueField;
        
        private string[] inputValuesField;
        
        /// <remarks/>
        public bool IsAllowedInTestMode {
            get {
                return this.isAllowedInTestModeField;
            }
            set {
                this.isAllowedInTestModeField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedValue {
            get {
                return this.expectedValueField;
            }
            set {
                this.expectedValueField = value;
            }
        }
        
        /// <remarks/>
        public string[] InputValues {
            get {
                return this.inputValuesField;
            }
            set {
                this.inputValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebProgrammingQuestion : QuestionBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebNode {
        
        private WebNodeType typeField;
        
        private string nameField;
        
        private WebNode[] nodesField;
        
        private string contentField;
        
        /// <remarks/>
        public WebNodeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public WebNode[] Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum WebNodeType {
        
        /// <remarks/>
        Directory,
        
        /// <remarks/>
        CSS,
        
        /// <remarks/>
        JavaScript,
        
        /// <remarks/>
        HTML,
        
        /// <remarks/>
        ASP_DOT_NET,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlQuestionTestAnswer : TestAnswerBase {
        
        private string sqlField;
        
        /// <remarks/>
        public string Sql {
            get {
                return this.sqlField;
            }
            set {
                this.sqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private string codeField;
        
        private string exeField;
        
        private string exeCodeField;
        
        private ProgrammingAnswerType answerTypeField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string ExeCode {
            get {
                return this.exeCodeField;
            }
            set {
                this.exeCodeField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingAnswerType AnswerType {
            get {
                return this.answerTypeField;
            }
            set {
                this.answerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum ProgrammingAnswerType {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        CPP,
        
        /// <remarks/>
        CSharp,
        
        /// <remarks/>
        VBNET,
        
        /// <remarks/>
        Java,
        
        /// <remarks/>
        Algo,
        
        /// <remarks/>
        Desc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private string codeField;
        
        private string exeField;
        
        private string exeCodeField;
        
        private ProgrammingAnswerType answerTypeField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string ExeCode {
            get {
                return this.exeCodeField;
            }
            set {
                this.exeCodeField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingAnswerType AnswerType {
            get {
                return this.answerTypeField;
            }
            set {
                this.answerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private WebNode webNodeField;
        
        /// <remarks/>
        public WebNode WebNode {
            get {
                return this.webNodeField;
            }
            set {
                this.webNodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionsCompletedEventHandler(object sender, GetQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Questions Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Questions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateTestStartedCompletedEventHandler(object sender, UpdateTestStartedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTestStartedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTestStartedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SetCandidateDisqualifiedCompletedEventHandler(object sender, SetCandidateDisqualifiedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCandidateDisqualifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCandidateDisqualifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestInfoCompletedEventHandler(object sender, GetTestInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CompileCodeCompletedEventHandler(object sender, CompileCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompileCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompileCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompilerMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompilerMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AutoCompileCodeCompletedEventHandler(object sender, AutoCompileCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCompileCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCompileCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompilerMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompilerMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTemplateCodeCompletedEventHandler(object sender, GetTemplateCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplateCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplateCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SubmitAnswersCompletedEventHandler(object sender, SubmitAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateWebsitesVisitedCompletedEventHandler(object sender, UpdateWebsitesVisitedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWebsitesVisitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWebsitesVisitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateApplicationsIgnoredCompletedEventHandler(object sender, UpdateApplicationsIgnoredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationsIgnoredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateApplicationsIgnoredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SendErrorMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SubmitTestImagesCompletedEventHandler(object sender, SubmitTestImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitTestImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitTestImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SaveWebPagesCompletedEventHandler(object sender, SaveWebPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWebPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWebPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591