//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
// 
#pragma warning disable 1591

namespace NvnTest.Employer.TestService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestServiceSoap", Namespace="http://www.coderlabz.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestAnswerBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceDataBase))]
    public partial class TestService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VarifyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserExtensionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserExtensionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuestionCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveQuestionCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQuestionLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveQuestionLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberOfQuestionPagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberOfQuestionPageByQuestionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionsByQuestionTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadObjectiveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateObjectiveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveObjectiveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSqlQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSqlQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveSqlQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAutoProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAutoProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAutoProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadWebProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateWebProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveWebProgrammingQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPapersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAutoPapersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAutoPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAutoPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionsCountByCategoryLevelTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePaperByAutoPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberOfTestSchedulePagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestSchedulesByFiltersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTestScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTestScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCompileCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebsitesVisitedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationsIgnoredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestsPurchasedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTestPurchaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTestImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWebPagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendErrorMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TestService() {
            this.Url = global::NvnTest.Employer.Properties.Settings.Default.NvnTest_Admin_TestService_TestService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event UpdateUserInfoCompletedEventHandler UpdateUserInfoCompleted;
        
        /// <remarks/>
        public event ForgotPasswordCompletedEventHandler ForgotPasswordCompleted;
        
        /// <remarks/>
        public event CheckUserExistsCompletedEventHandler CheckUserExistsCompleted;
        
        /// <remarks/>
        public event VarifyCodeCompletedEventHandler VarifyCodeCompleted;
        
        /// <remarks/>
        public event CreateNewCodeCompletedEventHandler CreateNewCodeCompleted;
        
        /// <remarks/>
        public event GetUserExtensionsCompletedEventHandler GetUserExtensionsCompleted;
        
        /// <remarks/>
        public event UpdateUserExtensionCompletedEventHandler UpdateUserExtensionCompleted;
        
        /// <remarks/>
        public event RemoveUserExtensionCompletedEventHandler RemoveUserExtensionCompleted;
        
        /// <remarks/>
        public event GetQuestionCategoriesCompletedEventHandler GetQuestionCategoriesCompleted;
        
        /// <remarks/>
        public event UpdateQuestionCategoryCompletedEventHandler UpdateQuestionCategoryCompleted;
        
        /// <remarks/>
        public event RemoveQuestionCategoryCompletedEventHandler RemoveQuestionCategoryCompleted;
        
        /// <remarks/>
        public event GetQuestionLevelsCompletedEventHandler GetQuestionLevelsCompleted;
        
        /// <remarks/>
        public event UpdateQuestionLevelCompletedEventHandler UpdateQuestionLevelCompleted;
        
        /// <remarks/>
        public event RemoveQuestionLevelCompletedEventHandler RemoveQuestionLevelCompleted;
        
        /// <remarks/>
        public event GetNumberOfQuestionPagesCompletedEventHandler GetNumberOfQuestionPagesCompleted;
        
        /// <remarks/>
        public event GetNumberOfQuestionPageByQuestionTypeCompletedEventHandler GetNumberOfQuestionPageByQuestionTypeCompleted;
        
        /// <remarks/>
        public event GetQuestionsCompletedEventHandler GetQuestionsCompleted;
        
        /// <remarks/>
        public event GetQuestionsByQuestionTypeCompletedEventHandler GetQuestionsByQuestionTypeCompleted;
        
        /// <remarks/>
        public event LoadObjectiveQuestionCompletedEventHandler LoadObjectiveQuestionCompleted;
        
        /// <remarks/>
        public event UpdateObjectiveQuestionCompletedEventHandler UpdateObjectiveQuestionCompleted;
        
        /// <remarks/>
        public event RemoveObjectiveQuestionCompletedEventHandler RemoveObjectiveQuestionCompleted;
        
        /// <remarks/>
        public event LoadSqlQuestionCompletedEventHandler LoadSqlQuestionCompleted;
        
        /// <remarks/>
        public event UpdateSqlQuestionCompletedEventHandler UpdateSqlQuestionCompleted;
        
        /// <remarks/>
        public event RemoveSqlQuestionCompletedEventHandler RemoveSqlQuestionCompleted;
        
        /// <remarks/>
        public event LoadProgrammingQuestionCompletedEventHandler LoadProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event UpdateProgrammingQuestionCompletedEventHandler UpdateProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event RemoveProgrammingQuestionCompletedEventHandler RemoveProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event LoadAutoProgrammingQuestionCompletedEventHandler LoadAutoProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event UpdateAutoProgrammingQuestionCompletedEventHandler UpdateAutoProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event RemoveAutoProgrammingQuestionCompletedEventHandler RemoveAutoProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event LoadWebProgrammingQuestionCompletedEventHandler LoadWebProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event UpdateWebProgrammingQuestionCompletedEventHandler UpdateWebProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event RemoveWebProgrammingQuestionCompletedEventHandler RemoveWebProgrammingQuestionCompleted;
        
        /// <remarks/>
        public event GetPapersCompletedEventHandler GetPapersCompleted;
        
        /// <remarks/>
        public event UpdatePaperCompletedEventHandler UpdatePaperCompleted;
        
        /// <remarks/>
        public event RemovePaperCompletedEventHandler RemovePaperCompleted;
        
        /// <remarks/>
        public event GetAutoPapersCompletedEventHandler GetAutoPapersCompleted;
        
        /// <remarks/>
        public event UpdateAutoPaperCompletedEventHandler UpdateAutoPaperCompleted;
        
        /// <remarks/>
        public event RemoveAutoPaperCompletedEventHandler RemoveAutoPaperCompleted;
        
        /// <remarks/>
        public event GetQuestionsCountByCategoryLevelTypeCompletedEventHandler GetQuestionsCountByCategoryLevelTypeCompleted;
        
        /// <remarks/>
        public event CreatePaperByAutoPaperCompletedEventHandler CreatePaperByAutoPaperCompleted;
        
        /// <remarks/>
        public event GetNumberOfTestSchedulePagesCompletedEventHandler GetNumberOfTestSchedulePagesCompleted;
        
        /// <remarks/>
        public event GetTestSchedulesCompletedEventHandler GetTestSchedulesCompleted;
        
        /// <remarks/>
        public event GetTestSchedulesByFiltersCompletedEventHandler GetTestSchedulesByFiltersCompleted;
        
        /// <remarks/>
        public event UpdateTestScheduleCompletedEventHandler UpdateTestScheduleCompleted;
        
        /// <remarks/>
        public event RemoveTestScheduleCompletedEventHandler RemoveTestScheduleCompleted;
        
        /// <remarks/>
        public event GetTestAnswersCompletedEventHandler GetTestAnswersCompleted;
        
        /// <remarks/>
        public event AutoCompileCodeCompletedEventHandler AutoCompileCodeCompleted;
        
        /// <remarks/>
        public event GetWebsitesVisitedCompletedEventHandler GetWebsitesVisitedCompleted;
        
        /// <remarks/>
        public event GetApplicationsIgnoredCompletedEventHandler GetApplicationsIgnoredCompleted;
        
        /// <remarks/>
        public event GetTestsPurchasedCompletedEventHandler GetTestsPurchasedCompleted;
        
        /// <remarks/>
        public event UpdateTestPurchaseCompletedEventHandler UpdateTestPurchaseCompleted;
        
        /// <remarks/>
        public event GetTestImagesCompletedEventHandler GetTestImagesCompleted;
        
        /// <remarks/>
        public event SaveWebPagesCompletedEventHandler SaveWebPagesCompleted;
        
        /// <remarks/>
        public event SendErrorMessageCompletedEventHandler SendErrorMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/Authenticate", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo Authenticate(string email, string password) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        email,
                        password});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string email, string password) {
            this.AuthenticateAsync(email, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(string email, string password, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        email,
                        password}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateUserInfo", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInfo UpdateUserInfo(UserInfo userInfo) {
            object[] results = this.Invoke("UpdateUserInfo", new object[] {
                        userInfo});
            return ((UserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(UserInfo userInfo) {
            this.UpdateUserInfoAsync(userInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserInfoAsync(UserInfo userInfo, object userState) {
            if ((this.UpdateUserInfoOperationCompleted == null)) {
                this.UpdateUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInfo", new object[] {
                        userInfo}, this.UpdateUserInfoOperationCompleted, userState);
        }
        
        private void OnUpdateUserInfoOperationCompleted(object arg) {
            if ((this.UpdateUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInfoCompleted(this, new UpdateUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/ForgotPassword", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ForgotPassword(string email) {
            object[] results = this.Invoke("ForgotPassword", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string email) {
            this.ForgotPasswordAsync(email, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string email, object userState) {
            if ((this.ForgotPasswordOperationCompleted == null)) {
                this.ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotPassword", new object[] {
                        email}, this.ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnForgotPasswordOperationCompleted(object arg) {
            if ((this.ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordCompleted(this, new ForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/CheckUserExists", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserExists(string email) {
            object[] results = this.Invoke("CheckUserExists", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserExistsAsync(string email) {
            this.CheckUserExistsAsync(email, null);
        }
        
        /// <remarks/>
        public void CheckUserExistsAsync(string email, object userState) {
            if ((this.CheckUserExistsOperationCompleted == null)) {
                this.CheckUserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserExistsOperationCompleted);
            }
            this.InvokeAsync("CheckUserExists", new object[] {
                        email}, this.CheckUserExistsOperationCompleted, userState);
        }
        
        private void OnCheckUserExistsOperationCompleted(object arg) {
            if ((this.CheckUserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserExistsCompleted(this, new CheckUserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/VarifyCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VarifyCode(string email, string code) {
            object[] results = this.Invoke("VarifyCode", new object[] {
                        email,
                        code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VarifyCodeAsync(string email, string code) {
            this.VarifyCodeAsync(email, code, null);
        }
        
        /// <remarks/>
        public void VarifyCodeAsync(string email, string code, object userState) {
            if ((this.VarifyCodeOperationCompleted == null)) {
                this.VarifyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVarifyCodeOperationCompleted);
            }
            this.InvokeAsync("VarifyCode", new object[] {
                        email,
                        code}, this.VarifyCodeOperationCompleted, userState);
        }
        
        private void OnVarifyCodeOperationCompleted(object arg) {
            if ((this.VarifyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VarifyCodeCompleted(this, new VarifyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/CreateNewCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNewCode(string email) {
            object[] results = this.Invoke("CreateNewCode", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewCodeAsync(string email) {
            this.CreateNewCodeAsync(email, null);
        }
        
        /// <remarks/>
        public void CreateNewCodeAsync(string email, object userState) {
            if ((this.CreateNewCodeOperationCompleted == null)) {
                this.CreateNewCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewCodeOperationCompleted);
            }
            this.InvokeAsync("CreateNewCode", new object[] {
                        email}, this.CreateNewCodeOperationCompleted, userState);
        }
        
        private void OnCreateNewCodeOperationCompleted(object arg) {
            if ((this.CreateNewCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewCodeCompleted(this, new CreateNewCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetUserExtensions", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserExtension[] GetUserExtensions(User user) {
            object[] results = this.Invoke("GetUserExtensions", new object[] {
                        user});
            return ((UserExtension[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserExtensionsAsync(User user) {
            this.GetUserExtensionsAsync(user, null);
        }
        
        /// <remarks/>
        public void GetUserExtensionsAsync(User user, object userState) {
            if ((this.GetUserExtensionsOperationCompleted == null)) {
                this.GetUserExtensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserExtensionsOperationCompleted);
            }
            this.InvokeAsync("GetUserExtensions", new object[] {
                        user}, this.GetUserExtensionsOperationCompleted, userState);
        }
        
        private void OnGetUserExtensionsOperationCompleted(object arg) {
            if ((this.GetUserExtensionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserExtensionsCompleted(this, new GetUserExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateUserExtension", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserExtension(UserExtension userExtension, User user) {
            object[] results = this.Invoke("UpdateUserExtension", new object[] {
                        userExtension,
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserExtensionAsync(UserExtension userExtension, User user) {
            this.UpdateUserExtensionAsync(userExtension, user, null);
        }
        
        /// <remarks/>
        public void UpdateUserExtensionAsync(UserExtension userExtension, User user, object userState) {
            if ((this.UpdateUserExtensionOperationCompleted == null)) {
                this.UpdateUserExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserExtensionOperationCompleted);
            }
            this.InvokeAsync("UpdateUserExtension", new object[] {
                        userExtension,
                        user}, this.UpdateUserExtensionOperationCompleted, userState);
        }
        
        private void OnUpdateUserExtensionOperationCompleted(object arg) {
            if ((this.UpdateUserExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserExtensionCompleted(this, new UpdateUserExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveUserExtension", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserExtension(UserExtension userExtension, User user) {
            object[] results = this.Invoke("RemoveUserExtension", new object[] {
                        userExtension,
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserExtensionAsync(UserExtension userExtension, User user) {
            this.RemoveUserExtensionAsync(userExtension, user, null);
        }
        
        /// <remarks/>
        public void RemoveUserExtensionAsync(UserExtension userExtension, User user, object userState) {
            if ((this.RemoveUserExtensionOperationCompleted == null)) {
                this.RemoveUserExtensionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserExtensionOperationCompleted);
            }
            this.InvokeAsync("RemoveUserExtension", new object[] {
                        userExtension,
                        user}, this.RemoveUserExtensionOperationCompleted, userState);
        }
        
        private void OnRemoveUserExtensionOperationCompleted(object arg) {
            if ((this.RemoveUserExtensionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserExtensionCompleted(this, new RemoveUserExtensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestionCategories", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionCategory[] GetQuestionCategories(User user) {
            object[] results = this.Invoke("GetQuestionCategories", new object[] {
                        user});
            return ((QuestionCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionCategoriesAsync(User user) {
            this.GetQuestionCategoriesAsync(user, null);
        }
        
        /// <remarks/>
        public void GetQuestionCategoriesAsync(User user, object userState) {
            if ((this.GetQuestionCategoriesOperationCompleted == null)) {
                this.GetQuestionCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetQuestionCategories", new object[] {
                        user}, this.GetQuestionCategoriesOperationCompleted, userState);
        }
        
        private void OnGetQuestionCategoriesOperationCompleted(object arg) {
            if ((this.GetQuestionCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionCategoriesCompleted(this, new GetQuestionCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateQuestionCategory", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionCategory UpdateQuestionCategory(QuestionCategory category, User user) {
            object[] results = this.Invoke("UpdateQuestionCategory", new object[] {
                        category,
                        user});
            return ((QuestionCategory)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuestionCategoryAsync(QuestionCategory category, User user) {
            this.UpdateQuestionCategoryAsync(category, user, null);
        }
        
        /// <remarks/>
        public void UpdateQuestionCategoryAsync(QuestionCategory category, User user, object userState) {
            if ((this.UpdateQuestionCategoryOperationCompleted == null)) {
                this.UpdateQuestionCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionCategoryOperationCompleted);
            }
            this.InvokeAsync("UpdateQuestionCategory", new object[] {
                        category,
                        user}, this.UpdateQuestionCategoryOperationCompleted, userState);
        }
        
        private void OnUpdateQuestionCategoryOperationCompleted(object arg) {
            if ((this.UpdateQuestionCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuestionCategoryCompleted(this, new UpdateQuestionCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveQuestionCategory", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionCategory RemoveQuestionCategory(QuestionCategory category, User user) {
            object[] results = this.Invoke("RemoveQuestionCategory", new object[] {
                        category,
                        user});
            return ((QuestionCategory)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveQuestionCategoryAsync(QuestionCategory category, User user) {
            this.RemoveQuestionCategoryAsync(category, user, null);
        }
        
        /// <remarks/>
        public void RemoveQuestionCategoryAsync(QuestionCategory category, User user, object userState) {
            if ((this.RemoveQuestionCategoryOperationCompleted == null)) {
                this.RemoveQuestionCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveQuestionCategoryOperationCompleted);
            }
            this.InvokeAsync("RemoveQuestionCategory", new object[] {
                        category,
                        user}, this.RemoveQuestionCategoryOperationCompleted, userState);
        }
        
        private void OnRemoveQuestionCategoryOperationCompleted(object arg) {
            if ((this.RemoveQuestionCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveQuestionCategoryCompleted(this, new RemoveQuestionCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestionLevels", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionLevel[] GetQuestionLevels(User user) {
            object[] results = this.Invoke("GetQuestionLevels", new object[] {
                        user});
            return ((QuestionLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionLevelsAsync(User user) {
            this.GetQuestionLevelsAsync(user, null);
        }
        
        /// <remarks/>
        public void GetQuestionLevelsAsync(User user, object userState) {
            if ((this.GetQuestionLevelsOperationCompleted == null)) {
                this.GetQuestionLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionLevelsOperationCompleted);
            }
            this.InvokeAsync("GetQuestionLevels", new object[] {
                        user}, this.GetQuestionLevelsOperationCompleted, userState);
        }
        
        private void OnGetQuestionLevelsOperationCompleted(object arg) {
            if ((this.GetQuestionLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionLevelsCompleted(this, new GetQuestionLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateQuestionLevel", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionLevel UpdateQuestionLevel(QuestionLevel questionLevel, User user) {
            object[] results = this.Invoke("UpdateQuestionLevel", new object[] {
                        questionLevel,
                        user});
            return ((QuestionLevel)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQuestionLevelAsync(QuestionLevel questionLevel, User user) {
            this.UpdateQuestionLevelAsync(questionLevel, user, null);
        }
        
        /// <remarks/>
        public void UpdateQuestionLevelAsync(QuestionLevel questionLevel, User user, object userState) {
            if ((this.UpdateQuestionLevelOperationCompleted == null)) {
                this.UpdateQuestionLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQuestionLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateQuestionLevel", new object[] {
                        questionLevel,
                        user}, this.UpdateQuestionLevelOperationCompleted, userState);
        }
        
        private void OnUpdateQuestionLevelOperationCompleted(object arg) {
            if ((this.UpdateQuestionLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQuestionLevelCompleted(this, new UpdateQuestionLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveQuestionLevel", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionLevel RemoveQuestionLevel(QuestionLevel questionLevel, User user) {
            object[] results = this.Invoke("RemoveQuestionLevel", new object[] {
                        questionLevel,
                        user});
            return ((QuestionLevel)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveQuestionLevelAsync(QuestionLevel questionLevel, User user) {
            this.RemoveQuestionLevelAsync(questionLevel, user, null);
        }
        
        /// <remarks/>
        public void RemoveQuestionLevelAsync(QuestionLevel questionLevel, User user, object userState) {
            if ((this.RemoveQuestionLevelOperationCompleted == null)) {
                this.RemoveQuestionLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveQuestionLevelOperationCompleted);
            }
            this.InvokeAsync("RemoveQuestionLevel", new object[] {
                        questionLevel,
                        user}, this.RemoveQuestionLevelOperationCompleted, userState);
        }
        
        private void OnRemoveQuestionLevelOperationCompleted(object arg) {
            if ((this.RemoveQuestionLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveQuestionLevelCompleted(this, new RemoveQuestionLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetNumberOfQuestionPages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetNumberOfQuestionPages(User user) {
            object[] results = this.Invoke("GetNumberOfQuestionPages", new object[] {
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberOfQuestionPagesAsync(User user) {
            this.GetNumberOfQuestionPagesAsync(user, null);
        }
        
        /// <remarks/>
        public void GetNumberOfQuestionPagesAsync(User user, object userState) {
            if ((this.GetNumberOfQuestionPagesOperationCompleted == null)) {
                this.GetNumberOfQuestionPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberOfQuestionPagesOperationCompleted);
            }
            this.InvokeAsync("GetNumberOfQuestionPages", new object[] {
                        user}, this.GetNumberOfQuestionPagesOperationCompleted, userState);
        }
        
        private void OnGetNumberOfQuestionPagesOperationCompleted(object arg) {
            if ((this.GetNumberOfQuestionPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberOfQuestionPagesCompleted(this, new GetNumberOfQuestionPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetNumberOfQuestionPageByQuestionType", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetNumberOfQuestionPageByQuestionType(QuestionType questionType, User user) {
            object[] results = this.Invoke("GetNumberOfQuestionPageByQuestionType", new object[] {
                        questionType,
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberOfQuestionPageByQuestionTypeAsync(QuestionType questionType, User user) {
            this.GetNumberOfQuestionPageByQuestionTypeAsync(questionType, user, null);
        }
        
        /// <remarks/>
        public void GetNumberOfQuestionPageByQuestionTypeAsync(QuestionType questionType, User user, object userState) {
            if ((this.GetNumberOfQuestionPageByQuestionTypeOperationCompleted == null)) {
                this.GetNumberOfQuestionPageByQuestionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberOfQuestionPageByQuestionTypeOperationCompleted);
            }
            this.InvokeAsync("GetNumberOfQuestionPageByQuestionType", new object[] {
                        questionType,
                        user}, this.GetNumberOfQuestionPageByQuestionTypeOperationCompleted, userState);
        }
        
        private void OnGetNumberOfQuestionPageByQuestionTypeOperationCompleted(object arg) {
            if ((this.GetNumberOfQuestionPageByQuestionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberOfQuestionPageByQuestionTypeCompleted(this, new GetNumberOfQuestionPageByQuestionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestions", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Questions GetQuestions(uint index, User user) {
            object[] results = this.Invoke("GetQuestions", new object[] {
                        index,
                        user});
            return ((Questions)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(uint index, User user) {
            this.GetQuestionsAsync(index, user, null);
        }
        
        /// <remarks/>
        public void GetQuestionsAsync(uint index, User user, object userState) {
            if ((this.GetQuestionsOperationCompleted == null)) {
                this.GetQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetQuestions", new object[] {
                        index,
                        user}, this.GetQuestionsOperationCompleted, userState);
        }
        
        private void OnGetQuestionsOperationCompleted(object arg) {
            if ((this.GetQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionsCompleted(this, new GetQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestionsByQuestionType", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Questions GetQuestionsByQuestionType(QuestionType questionType, uint index, User user) {
            object[] results = this.Invoke("GetQuestionsByQuestionType", new object[] {
                        questionType,
                        index,
                        user});
            return ((Questions)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionsByQuestionTypeAsync(QuestionType questionType, uint index, User user) {
            this.GetQuestionsByQuestionTypeAsync(questionType, index, user, null);
        }
        
        /// <remarks/>
        public void GetQuestionsByQuestionTypeAsync(QuestionType questionType, uint index, User user, object userState) {
            if ((this.GetQuestionsByQuestionTypeOperationCompleted == null)) {
                this.GetQuestionsByQuestionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionsByQuestionTypeOperationCompleted);
            }
            this.InvokeAsync("GetQuestionsByQuestionType", new object[] {
                        questionType,
                        index,
                        user}, this.GetQuestionsByQuestionTypeOperationCompleted, userState);
        }
        
        private void OnGetQuestionsByQuestionTypeOperationCompleted(object arg) {
            if ((this.GetQuestionsByQuestionTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionsByQuestionTypeCompleted(this, new GetQuestionsByQuestionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/LoadObjectiveQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectiveQuestion LoadObjectiveQuestion(uint id, User user) {
            object[] results = this.Invoke("LoadObjectiveQuestion", new object[] {
                        id,
                        user});
            return ((ObjectiveQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void LoadObjectiveQuestionAsync(uint id, User user) {
            this.LoadObjectiveQuestionAsync(id, user, null);
        }
        
        /// <remarks/>
        public void LoadObjectiveQuestionAsync(uint id, User user, object userState) {
            if ((this.LoadObjectiveQuestionOperationCompleted == null)) {
                this.LoadObjectiveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadObjectiveQuestionOperationCompleted);
            }
            this.InvokeAsync("LoadObjectiveQuestion", new object[] {
                        id,
                        user}, this.LoadObjectiveQuestionOperationCompleted, userState);
        }
        
        private void OnLoadObjectiveQuestionOperationCompleted(object arg) {
            if ((this.LoadObjectiveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadObjectiveQuestionCompleted(this, new LoadObjectiveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateObjectiveQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectiveQuestion UpdateObjectiveQuestion(ObjectiveQuestion objectiveQuestion, User user) {
            object[] results = this.Invoke("UpdateObjectiveQuestion", new object[] {
                        objectiveQuestion,
                        user});
            return ((ObjectiveQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateObjectiveQuestionAsync(ObjectiveQuestion objectiveQuestion, User user) {
            this.UpdateObjectiveQuestionAsync(objectiveQuestion, user, null);
        }
        
        /// <remarks/>
        public void UpdateObjectiveQuestionAsync(ObjectiveQuestion objectiveQuestion, User user, object userState) {
            if ((this.UpdateObjectiveQuestionOperationCompleted == null)) {
                this.UpdateObjectiveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateObjectiveQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateObjectiveQuestion", new object[] {
                        objectiveQuestion,
                        user}, this.UpdateObjectiveQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateObjectiveQuestionOperationCompleted(object arg) {
            if ((this.UpdateObjectiveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateObjectiveQuestionCompleted(this, new UpdateObjectiveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveObjectiveQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectiveQuestion RemoveObjectiveQuestion(ObjectiveQuestion objectiveQuestion, User user) {
            object[] results = this.Invoke("RemoveObjectiveQuestion", new object[] {
                        objectiveQuestion,
                        user});
            return ((ObjectiveQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveObjectiveQuestionAsync(ObjectiveQuestion objectiveQuestion, User user) {
            this.RemoveObjectiveQuestionAsync(objectiveQuestion, user, null);
        }
        
        /// <remarks/>
        public void RemoveObjectiveQuestionAsync(ObjectiveQuestion objectiveQuestion, User user, object userState) {
            if ((this.RemoveObjectiveQuestionOperationCompleted == null)) {
                this.RemoveObjectiveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveObjectiveQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveObjectiveQuestion", new object[] {
                        objectiveQuestion,
                        user}, this.RemoveObjectiveQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveObjectiveQuestionOperationCompleted(object arg) {
            if ((this.RemoveObjectiveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveObjectiveQuestionCompleted(this, new RemoveObjectiveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/LoadSqlQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SqlQuestion LoadSqlQuestion(uint id, User user) {
            object[] results = this.Invoke("LoadSqlQuestion", new object[] {
                        id,
                        user});
            return ((SqlQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void LoadSqlQuestionAsync(uint id, User user) {
            this.LoadSqlQuestionAsync(id, user, null);
        }
        
        /// <remarks/>
        public void LoadSqlQuestionAsync(uint id, User user, object userState) {
            if ((this.LoadSqlQuestionOperationCompleted == null)) {
                this.LoadSqlQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSqlQuestionOperationCompleted);
            }
            this.InvokeAsync("LoadSqlQuestion", new object[] {
                        id,
                        user}, this.LoadSqlQuestionOperationCompleted, userState);
        }
        
        private void OnLoadSqlQuestionOperationCompleted(object arg) {
            if ((this.LoadSqlQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSqlQuestionCompleted(this, new LoadSqlQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateSqlQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SqlQuestion UpdateSqlQuestion(SqlQuestion sqlQuestion, User user) {
            object[] results = this.Invoke("UpdateSqlQuestion", new object[] {
                        sqlQuestion,
                        user});
            return ((SqlQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSqlQuestionAsync(SqlQuestion sqlQuestion, User user) {
            this.UpdateSqlQuestionAsync(sqlQuestion, user, null);
        }
        
        /// <remarks/>
        public void UpdateSqlQuestionAsync(SqlQuestion sqlQuestion, User user, object userState) {
            if ((this.UpdateSqlQuestionOperationCompleted == null)) {
                this.UpdateSqlQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSqlQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateSqlQuestion", new object[] {
                        sqlQuestion,
                        user}, this.UpdateSqlQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateSqlQuestionOperationCompleted(object arg) {
            if ((this.UpdateSqlQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSqlQuestionCompleted(this, new UpdateSqlQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveSqlQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SqlQuestion RemoveSqlQuestion(SqlQuestion sqlQuestion, User user) {
            object[] results = this.Invoke("RemoveSqlQuestion", new object[] {
                        sqlQuestion,
                        user});
            return ((SqlQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveSqlQuestionAsync(SqlQuestion sqlQuestion, User user) {
            this.RemoveSqlQuestionAsync(sqlQuestion, user, null);
        }
        
        /// <remarks/>
        public void RemoveSqlQuestionAsync(SqlQuestion sqlQuestion, User user, object userState) {
            if ((this.RemoveSqlQuestionOperationCompleted == null)) {
                this.RemoveSqlQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveSqlQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveSqlQuestion", new object[] {
                        sqlQuestion,
                        user}, this.RemoveSqlQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveSqlQuestionOperationCompleted(object arg) {
            if ((this.RemoveSqlQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveSqlQuestionCompleted(this, new RemoveSqlQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/LoadProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgrammingQuestion LoadProgrammingQuestion(uint id, User user) {
            object[] results = this.Invoke("LoadProgrammingQuestion", new object[] {
                        id,
                        user});
            return ((ProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void LoadProgrammingQuestionAsync(uint id, User user) {
            this.LoadProgrammingQuestionAsync(id, user, null);
        }
        
        /// <remarks/>
        public void LoadProgrammingQuestionAsync(uint id, User user, object userState) {
            if ((this.LoadProgrammingQuestionOperationCompleted == null)) {
                this.LoadProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("LoadProgrammingQuestion", new object[] {
                        id,
                        user}, this.LoadProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnLoadProgrammingQuestionOperationCompleted(object arg) {
            if ((this.LoadProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadProgrammingQuestionCompleted(this, new LoadProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgrammingQuestion UpdateProgrammingQuestion(ProgrammingQuestion programmingQuestion, User user) {
            object[] results = this.Invoke("UpdateProgrammingQuestion", new object[] {
                        programmingQuestion,
                        user});
            return ((ProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProgrammingQuestionAsync(ProgrammingQuestion programmingQuestion, User user) {
            this.UpdateProgrammingQuestionAsync(programmingQuestion, user, null);
        }
        
        /// <remarks/>
        public void UpdateProgrammingQuestionAsync(ProgrammingQuestion programmingQuestion, User user, object userState) {
            if ((this.UpdateProgrammingQuestionOperationCompleted == null)) {
                this.UpdateProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateProgrammingQuestion", new object[] {
                        programmingQuestion,
                        user}, this.UpdateProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateProgrammingQuestionOperationCompleted(object arg) {
            if ((this.UpdateProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProgrammingQuestionCompleted(this, new UpdateProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProgrammingQuestion RemoveProgrammingQuestion(ProgrammingQuestion programmingQuestion, User user) {
            object[] results = this.Invoke("RemoveProgrammingQuestion", new object[] {
                        programmingQuestion,
                        user});
            return ((ProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProgrammingQuestionAsync(ProgrammingQuestion programmingQuestion, User user) {
            this.RemoveProgrammingQuestionAsync(programmingQuestion, user, null);
        }
        
        /// <remarks/>
        public void RemoveProgrammingQuestionAsync(ProgrammingQuestion programmingQuestion, User user, object userState) {
            if ((this.RemoveProgrammingQuestionOperationCompleted == null)) {
                this.RemoveProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveProgrammingQuestion", new object[] {
                        programmingQuestion,
                        user}, this.RemoveProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveProgrammingQuestionOperationCompleted(object arg) {
            if ((this.RemoveProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProgrammingQuestionCompleted(this, new RemoveProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/LoadAutoProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoProgrammingQuestion LoadAutoProgrammingQuestion(uint id, User user) {
            object[] results = this.Invoke("LoadAutoProgrammingQuestion", new object[] {
                        id,
                        user});
            return ((AutoProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAutoProgrammingQuestionAsync(uint id, User user) {
            this.LoadAutoProgrammingQuestionAsync(id, user, null);
        }
        
        /// <remarks/>
        public void LoadAutoProgrammingQuestionAsync(uint id, User user, object userState) {
            if ((this.LoadAutoProgrammingQuestionOperationCompleted == null)) {
                this.LoadAutoProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAutoProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("LoadAutoProgrammingQuestion", new object[] {
                        id,
                        user}, this.LoadAutoProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnLoadAutoProgrammingQuestionOperationCompleted(object arg) {
            if ((this.LoadAutoProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAutoProgrammingQuestionCompleted(this, new LoadAutoProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateAutoProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoProgrammingQuestion UpdateAutoProgrammingQuestion(AutoProgrammingQuestion autoProgrammingQuestion, User user) {
            object[] results = this.Invoke("UpdateAutoProgrammingQuestion", new object[] {
                        autoProgrammingQuestion,
                        user});
            return ((AutoProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAutoProgrammingQuestionAsync(AutoProgrammingQuestion autoProgrammingQuestion, User user) {
            this.UpdateAutoProgrammingQuestionAsync(autoProgrammingQuestion, user, null);
        }
        
        /// <remarks/>
        public void UpdateAutoProgrammingQuestionAsync(AutoProgrammingQuestion autoProgrammingQuestion, User user, object userState) {
            if ((this.UpdateAutoProgrammingQuestionOperationCompleted == null)) {
                this.UpdateAutoProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAutoProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateAutoProgrammingQuestion", new object[] {
                        autoProgrammingQuestion,
                        user}, this.UpdateAutoProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateAutoProgrammingQuestionOperationCompleted(object arg) {
            if ((this.UpdateAutoProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAutoProgrammingQuestionCompleted(this, new UpdateAutoProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveAutoProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoProgrammingQuestion RemoveAutoProgrammingQuestion(AutoProgrammingQuestion autoProgrammingQuestion, User user) {
            object[] results = this.Invoke("RemoveAutoProgrammingQuestion", new object[] {
                        autoProgrammingQuestion,
                        user});
            return ((AutoProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAutoProgrammingQuestionAsync(AutoProgrammingQuestion autoProgrammingQuestion, User user) {
            this.RemoveAutoProgrammingQuestionAsync(autoProgrammingQuestion, user, null);
        }
        
        /// <remarks/>
        public void RemoveAutoProgrammingQuestionAsync(AutoProgrammingQuestion autoProgrammingQuestion, User user, object userState) {
            if ((this.RemoveAutoProgrammingQuestionOperationCompleted == null)) {
                this.RemoveAutoProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAutoProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveAutoProgrammingQuestion", new object[] {
                        autoProgrammingQuestion,
                        user}, this.RemoveAutoProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveAutoProgrammingQuestionOperationCompleted(object arg) {
            if ((this.RemoveAutoProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAutoProgrammingQuestionCompleted(this, new RemoveAutoProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/LoadWebProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebProgrammingQuestion LoadWebProgrammingQuestion(uint id, User user) {
            object[] results = this.Invoke("LoadWebProgrammingQuestion", new object[] {
                        id,
                        user});
            return ((WebProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void LoadWebProgrammingQuestionAsync(uint id, User user) {
            this.LoadWebProgrammingQuestionAsync(id, user, null);
        }
        
        /// <remarks/>
        public void LoadWebProgrammingQuestionAsync(uint id, User user, object userState) {
            if ((this.LoadWebProgrammingQuestionOperationCompleted == null)) {
                this.LoadWebProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadWebProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("LoadWebProgrammingQuestion", new object[] {
                        id,
                        user}, this.LoadWebProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnLoadWebProgrammingQuestionOperationCompleted(object arg) {
            if ((this.LoadWebProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadWebProgrammingQuestionCompleted(this, new LoadWebProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateWebProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebProgrammingQuestion UpdateWebProgrammingQuestion(WebProgrammingQuestion webProgrammingQuestion, User user) {
            object[] results = this.Invoke("UpdateWebProgrammingQuestion", new object[] {
                        webProgrammingQuestion,
                        user});
            return ((WebProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateWebProgrammingQuestionAsync(WebProgrammingQuestion webProgrammingQuestion, User user) {
            this.UpdateWebProgrammingQuestionAsync(webProgrammingQuestion, user, null);
        }
        
        /// <remarks/>
        public void UpdateWebProgrammingQuestionAsync(WebProgrammingQuestion webProgrammingQuestion, User user, object userState) {
            if ((this.UpdateWebProgrammingQuestionOperationCompleted == null)) {
                this.UpdateWebProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateWebProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("UpdateWebProgrammingQuestion", new object[] {
                        webProgrammingQuestion,
                        user}, this.UpdateWebProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnUpdateWebProgrammingQuestionOperationCompleted(object arg) {
            if ((this.UpdateWebProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateWebProgrammingQuestionCompleted(this, new UpdateWebProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveWebProgrammingQuestion", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WebProgrammingQuestion RemoveWebProgrammingQuestion(WebProgrammingQuestion webProgrammingQuestion, User user) {
            object[] results = this.Invoke("RemoveWebProgrammingQuestion", new object[] {
                        webProgrammingQuestion,
                        user});
            return ((WebProgrammingQuestion)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveWebProgrammingQuestionAsync(WebProgrammingQuestion webProgrammingQuestion, User user) {
            this.RemoveWebProgrammingQuestionAsync(webProgrammingQuestion, user, null);
        }
        
        /// <remarks/>
        public void RemoveWebProgrammingQuestionAsync(WebProgrammingQuestion webProgrammingQuestion, User user, object userState) {
            if ((this.RemoveWebProgrammingQuestionOperationCompleted == null)) {
                this.RemoveWebProgrammingQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveWebProgrammingQuestionOperationCompleted);
            }
            this.InvokeAsync("RemoveWebProgrammingQuestion", new object[] {
                        webProgrammingQuestion,
                        user}, this.RemoveWebProgrammingQuestionOperationCompleted, userState);
        }
        
        private void OnRemoveWebProgrammingQuestionOperationCompleted(object arg) {
            if ((this.RemoveWebProgrammingQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveWebProgrammingQuestionCompleted(this, new RemoveWebProgrammingQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetPapers", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paper[] GetPapers(User user) {
            object[] results = this.Invoke("GetPapers", new object[] {
                        user});
            return ((Paper[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPapersAsync(User user) {
            this.GetPapersAsync(user, null);
        }
        
        /// <remarks/>
        public void GetPapersAsync(User user, object userState) {
            if ((this.GetPapersOperationCompleted == null)) {
                this.GetPapersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPapersOperationCompleted);
            }
            this.InvokeAsync("GetPapers", new object[] {
                        user}, this.GetPapersOperationCompleted, userState);
        }
        
        private void OnGetPapersOperationCompleted(object arg) {
            if ((this.GetPapersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPapersCompleted(this, new GetPapersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdatePaper", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paper UpdatePaper(Paper paper, User user) {
            object[] results = this.Invoke("UpdatePaper", new object[] {
                        paper,
                        user});
            return ((Paper)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePaperAsync(Paper paper, User user) {
            this.UpdatePaperAsync(paper, user, null);
        }
        
        /// <remarks/>
        public void UpdatePaperAsync(Paper paper, User user, object userState) {
            if ((this.UpdatePaperOperationCompleted == null)) {
                this.UpdatePaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePaperOperationCompleted);
            }
            this.InvokeAsync("UpdatePaper", new object[] {
                        paper,
                        user}, this.UpdatePaperOperationCompleted, userState);
        }
        
        private void OnUpdatePaperOperationCompleted(object arg) {
            if ((this.UpdatePaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePaperCompleted(this, new UpdatePaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemovePaper", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint RemovePaper(Paper paper, User user) {
            object[] results = this.Invoke("RemovePaper", new object[] {
                        paper,
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void RemovePaperAsync(Paper paper, User user) {
            this.RemovePaperAsync(paper, user, null);
        }
        
        /// <remarks/>
        public void RemovePaperAsync(Paper paper, User user, object userState) {
            if ((this.RemovePaperOperationCompleted == null)) {
                this.RemovePaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePaperOperationCompleted);
            }
            this.InvokeAsync("RemovePaper", new object[] {
                        paper,
                        user}, this.RemovePaperOperationCompleted, userState);
        }
        
        private void OnRemovePaperOperationCompleted(object arg) {
            if ((this.RemovePaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePaperCompleted(this, new RemovePaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetAutoPapers", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoPaper[] GetAutoPapers(User user) {
            object[] results = this.Invoke("GetAutoPapers", new object[] {
                        user});
            return ((AutoPaper[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAutoPapersAsync(User user) {
            this.GetAutoPapersAsync(user, null);
        }
        
        /// <remarks/>
        public void GetAutoPapersAsync(User user, object userState) {
            if ((this.GetAutoPapersOperationCompleted == null)) {
                this.GetAutoPapersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAutoPapersOperationCompleted);
            }
            this.InvokeAsync("GetAutoPapers", new object[] {
                        user}, this.GetAutoPapersOperationCompleted, userState);
        }
        
        private void OnGetAutoPapersOperationCompleted(object arg) {
            if ((this.GetAutoPapersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAutoPapersCompleted(this, new GetAutoPapersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateAutoPaper", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoPaper UpdateAutoPaper(AutoPaper paper, User user) {
            object[] results = this.Invoke("UpdateAutoPaper", new object[] {
                        paper,
                        user});
            return ((AutoPaper)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAutoPaperAsync(AutoPaper paper, User user) {
            this.UpdateAutoPaperAsync(paper, user, null);
        }
        
        /// <remarks/>
        public void UpdateAutoPaperAsync(AutoPaper paper, User user, object userState) {
            if ((this.UpdateAutoPaperOperationCompleted == null)) {
                this.UpdateAutoPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAutoPaperOperationCompleted);
            }
            this.InvokeAsync("UpdateAutoPaper", new object[] {
                        paper,
                        user}, this.UpdateAutoPaperOperationCompleted, userState);
        }
        
        private void OnUpdateAutoPaperOperationCompleted(object arg) {
            if ((this.UpdateAutoPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAutoPaperCompleted(this, new UpdateAutoPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveAutoPaper", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AutoPaper RemoveAutoPaper(AutoPaper paper, User user) {
            object[] results = this.Invoke("RemoveAutoPaper", new object[] {
                        paper,
                        user});
            return ((AutoPaper)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAutoPaperAsync(AutoPaper paper, User user) {
            this.RemoveAutoPaperAsync(paper, user, null);
        }
        
        /// <remarks/>
        public void RemoveAutoPaperAsync(AutoPaper paper, User user, object userState) {
            if ((this.RemoveAutoPaperOperationCompleted == null)) {
                this.RemoveAutoPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAutoPaperOperationCompleted);
            }
            this.InvokeAsync("RemoveAutoPaper", new object[] {
                        paper,
                        user}, this.RemoveAutoPaperOperationCompleted, userState);
        }
        
        private void OnRemoveAutoPaperOperationCompleted(object arg) {
            if ((this.RemoveAutoPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAutoPaperCompleted(this, new RemoveAutoPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetQuestionsCountByCategoryLevelType", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetQuestionsCountByCategoryLevelType(QuestionType questionType, uint count, uint category, uint difficultyLevel, User user) {
            object[] results = this.Invoke("GetQuestionsCountByCategoryLevelType", new object[] {
                        questionType,
                        count,
                        category,
                        difficultyLevel,
                        user});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionsCountByCategoryLevelTypeAsync(QuestionType questionType, uint count, uint category, uint difficultyLevel, User user) {
            this.GetQuestionsCountByCategoryLevelTypeAsync(questionType, count, category, difficultyLevel, user, null);
        }
        
        /// <remarks/>
        public void GetQuestionsCountByCategoryLevelTypeAsync(QuestionType questionType, uint count, uint category, uint difficultyLevel, User user, object userState) {
            if ((this.GetQuestionsCountByCategoryLevelTypeOperationCompleted == null)) {
                this.GetQuestionsCountByCategoryLevelTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionsCountByCategoryLevelTypeOperationCompleted);
            }
            this.InvokeAsync("GetQuestionsCountByCategoryLevelType", new object[] {
                        questionType,
                        count,
                        category,
                        difficultyLevel,
                        user}, this.GetQuestionsCountByCategoryLevelTypeOperationCompleted, userState);
        }
        
        private void OnGetQuestionsCountByCategoryLevelTypeOperationCompleted(object arg) {
            if ((this.GetQuestionsCountByCategoryLevelTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionsCountByCategoryLevelTypeCompleted(this, new GetQuestionsCountByCategoryLevelTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/CreatePaperByAutoPaper", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paper CreatePaperByAutoPaper(AutoPaper paper, User user) {
            object[] results = this.Invoke("CreatePaperByAutoPaper", new object[] {
                        paper,
                        user});
            return ((Paper)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePaperByAutoPaperAsync(AutoPaper paper, User user) {
            this.CreatePaperByAutoPaperAsync(paper, user, null);
        }
        
        /// <remarks/>
        public void CreatePaperByAutoPaperAsync(AutoPaper paper, User user, object userState) {
            if ((this.CreatePaperByAutoPaperOperationCompleted == null)) {
                this.CreatePaperByAutoPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePaperByAutoPaperOperationCompleted);
            }
            this.InvokeAsync("CreatePaperByAutoPaper", new object[] {
                        paper,
                        user}, this.CreatePaperByAutoPaperOperationCompleted, userState);
        }
        
        private void OnCreatePaperByAutoPaperOperationCompleted(object arg) {
            if ((this.CreatePaperByAutoPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePaperByAutoPaperCompleted(this, new CreatePaperByAutoPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetNumberOfTestSchedulePages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetNumberOfTestSchedulePages(User user) {
            object[] results = this.Invoke("GetNumberOfTestSchedulePages", new object[] {
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberOfTestSchedulePagesAsync(User user) {
            this.GetNumberOfTestSchedulePagesAsync(user, null);
        }
        
        /// <remarks/>
        public void GetNumberOfTestSchedulePagesAsync(User user, object userState) {
            if ((this.GetNumberOfTestSchedulePagesOperationCompleted == null)) {
                this.GetNumberOfTestSchedulePagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberOfTestSchedulePagesOperationCompleted);
            }
            this.InvokeAsync("GetNumberOfTestSchedulePages", new object[] {
                        user}, this.GetNumberOfTestSchedulePagesOperationCompleted, userState);
        }
        
        private void OnGetNumberOfTestSchedulePagesOperationCompleted(object arg) {
            if ((this.GetNumberOfTestSchedulePagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberOfTestSchedulePagesCompleted(this, new GetNumberOfTestSchedulePagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestSchedules", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestSchedule[] GetTestSchedules(User user, uint index) {
            object[] results = this.Invoke("GetTestSchedules", new object[] {
                        user,
                        index});
            return ((TestSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestSchedulesAsync(User user, uint index) {
            this.GetTestSchedulesAsync(user, index, null);
        }
        
        /// <remarks/>
        public void GetTestSchedulesAsync(User user, uint index, object userState) {
            if ((this.GetTestSchedulesOperationCompleted == null)) {
                this.GetTestSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetTestSchedules", new object[] {
                        user,
                        index}, this.GetTestSchedulesOperationCompleted, userState);
        }
        
        private void OnGetTestSchedulesOperationCompleted(object arg) {
            if ((this.GetTestSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestSchedulesCompleted(this, new GetTestSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestSchedulesByFilters", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestSchedule[] GetTestSchedulesByFilters(User user, string[] filters, uint index) {
            object[] results = this.Invoke("GetTestSchedulesByFilters", new object[] {
                        user,
                        filters,
                        index});
            return ((TestSchedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestSchedulesByFiltersAsync(User user, string[] filters, uint index) {
            this.GetTestSchedulesByFiltersAsync(user, filters, index, null);
        }
        
        /// <remarks/>
        public void GetTestSchedulesByFiltersAsync(User user, string[] filters, uint index, object userState) {
            if ((this.GetTestSchedulesByFiltersOperationCompleted == null)) {
                this.GetTestSchedulesByFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestSchedulesByFiltersOperationCompleted);
            }
            this.InvokeAsync("GetTestSchedulesByFilters", new object[] {
                        user,
                        filters,
                        index}, this.GetTestSchedulesByFiltersOperationCompleted, userState);
        }
        
        private void OnGetTestSchedulesByFiltersOperationCompleted(object arg) {
            if ((this.GetTestSchedulesByFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestSchedulesByFiltersCompleted(this, new GetTestSchedulesByFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateTestSchedule", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestSchedule UpdateTestSchedule(TestSchedule testSchedule, User user) {
            object[] results = this.Invoke("UpdateTestSchedule", new object[] {
                        testSchedule,
                        user});
            return ((TestSchedule)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTestScheduleAsync(TestSchedule testSchedule, User user) {
            this.UpdateTestScheduleAsync(testSchedule, user, null);
        }
        
        /// <remarks/>
        public void UpdateTestScheduleAsync(TestSchedule testSchedule, User user, object userState) {
            if ((this.UpdateTestScheduleOperationCompleted == null)) {
                this.UpdateTestScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTestScheduleOperationCompleted);
            }
            this.InvokeAsync("UpdateTestSchedule", new object[] {
                        testSchedule,
                        user}, this.UpdateTestScheduleOperationCompleted, userState);
        }
        
        private void OnUpdateTestScheduleOperationCompleted(object arg) {
            if ((this.UpdateTestScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTestScheduleCompleted(this, new UpdateTestScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/RemoveTestSchedule", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint RemoveTestSchedule(TestSchedule testSchedule, User user) {
            object[] results = this.Invoke("RemoveTestSchedule", new object[] {
                        testSchedule,
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveTestScheduleAsync(TestSchedule testSchedule, User user) {
            this.RemoveTestScheduleAsync(testSchedule, user, null);
        }
        
        /// <remarks/>
        public void RemoveTestScheduleAsync(TestSchedule testSchedule, User user, object userState) {
            if ((this.RemoveTestScheduleOperationCompleted == null)) {
                this.RemoveTestScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTestScheduleOperationCompleted);
            }
            this.InvokeAsync("RemoveTestSchedule", new object[] {
                        testSchedule,
                        user}, this.RemoveTestScheduleOperationCompleted, userState);
        }
        
        private void OnRemoveTestScheduleOperationCompleted(object arg) {
            if ((this.RemoveTestScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTestScheduleCompleted(this, new RemoveTestScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestAnswers", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestAnswers GetTestAnswers(uint testId, User user) {
            object[] results = this.Invoke("GetTestAnswers", new object[] {
                        testId,
                        user});
            return ((TestAnswers)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestAnswersAsync(uint testId, User user) {
            this.GetTestAnswersAsync(testId, user, null);
        }
        
        /// <remarks/>
        public void GetTestAnswersAsync(uint testId, User user, object userState) {
            if ((this.GetTestAnswersOperationCompleted == null)) {
                this.GetTestAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestAnswersOperationCompleted);
            }
            this.InvokeAsync("GetTestAnswers", new object[] {
                        testId,
                        user}, this.GetTestAnswersOperationCompleted, userState);
        }
        
        private void OnGetTestAnswersOperationCompleted(object arg) {
            if ((this.GetTestAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestAnswersCompleted(this, new GetTestAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/AutoCompileCode", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompilerMessage AutoCompileCode(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, User user) {
            object[] results = this.Invoke("AutoCompileCode", new object[] {
                        question,
                        code,
                        sessionId,
                        answerType,
                        user});
            return ((CompilerMessage)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCompileCodeAsync(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, User user) {
            this.AutoCompileCodeAsync(question, code, sessionId, answerType, user, null);
        }
        
        /// <remarks/>
        public void AutoCompileCodeAsync(AutoProgrammingQuestion question, string code, string sessionId, ProgrammingAnswerType answerType, User user, object userState) {
            if ((this.AutoCompileCodeOperationCompleted == null)) {
                this.AutoCompileCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCompileCodeOperationCompleted);
            }
            this.InvokeAsync("AutoCompileCode", new object[] {
                        question,
                        code,
                        sessionId,
                        answerType,
                        user}, this.AutoCompileCodeOperationCompleted, userState);
        }
        
        private void OnAutoCompileCodeOperationCompleted(object arg) {
            if ((this.AutoCompileCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCompileCodeCompleted(this, new AutoCompileCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetWebsitesVisited", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWebsitesVisited(uint testId, User user) {
            object[] results = this.Invoke("GetWebsitesVisited", new object[] {
                        testId,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebsitesVisitedAsync(uint testId, User user) {
            this.GetWebsitesVisitedAsync(testId, user, null);
        }
        
        /// <remarks/>
        public void GetWebsitesVisitedAsync(uint testId, User user, object userState) {
            if ((this.GetWebsitesVisitedOperationCompleted == null)) {
                this.GetWebsitesVisitedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebsitesVisitedOperationCompleted);
            }
            this.InvokeAsync("GetWebsitesVisited", new object[] {
                        testId,
                        user}, this.GetWebsitesVisitedOperationCompleted, userState);
        }
        
        private void OnGetWebsitesVisitedOperationCompleted(object arg) {
            if ((this.GetWebsitesVisitedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebsitesVisitedCompleted(this, new GetWebsitesVisitedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetApplicationsIgnored", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplicationsIgnored(uint testId, User user) {
            object[] results = this.Invoke("GetApplicationsIgnored", new object[] {
                        testId,
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationsIgnoredAsync(uint testId, User user) {
            this.GetApplicationsIgnoredAsync(testId, user, null);
        }
        
        /// <remarks/>
        public void GetApplicationsIgnoredAsync(uint testId, User user, object userState) {
            if ((this.GetApplicationsIgnoredOperationCompleted == null)) {
                this.GetApplicationsIgnoredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationsIgnoredOperationCompleted);
            }
            this.InvokeAsync("GetApplicationsIgnored", new object[] {
                        testId,
                        user}, this.GetApplicationsIgnoredOperationCompleted, userState);
        }
        
        private void OnGetApplicationsIgnoredOperationCompleted(object arg) {
            if ((this.GetApplicationsIgnoredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationsIgnoredCompleted(this, new GetApplicationsIgnoredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestsPurchased", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetTestsPurchased(User user) {
            object[] results = this.Invoke("GetTestsPurchased", new object[] {
                        user});
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetTestsPurchasedAsync(User user) {
            this.GetTestsPurchasedAsync(user, null);
        }
        
        /// <remarks/>
        public void GetTestsPurchasedAsync(User user, object userState) {
            if ((this.GetTestsPurchasedOperationCompleted == null)) {
                this.GetTestsPurchasedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestsPurchasedOperationCompleted);
            }
            this.InvokeAsync("GetTestsPurchased", new object[] {
                        user}, this.GetTestsPurchasedOperationCompleted, userState);
        }
        
        private void OnGetTestsPurchasedOperationCompleted(object arg) {
            if ((this.GetTestsPurchasedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestsPurchasedCompleted(this, new GetTestsPurchasedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/UpdateTestPurchase", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTestPurchase(string email, uint qty, string token) {
            object[] results = this.Invoke("UpdateTestPurchase", new object[] {
                        email,
                        qty,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTestPurchaseAsync(string email, uint qty, string token) {
            this.UpdateTestPurchaseAsync(email, qty, token, null);
        }
        
        /// <remarks/>
        public void UpdateTestPurchaseAsync(string email, uint qty, string token, object userState) {
            if ((this.UpdateTestPurchaseOperationCompleted == null)) {
                this.UpdateTestPurchaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTestPurchaseOperationCompleted);
            }
            this.InvokeAsync("UpdateTestPurchase", new object[] {
                        email,
                        qty,
                        token}, this.UpdateTestPurchaseOperationCompleted, userState);
        }
        
        private void OnUpdateTestPurchaseOperationCompleted(object arg) {
            if ((this.UpdateTestPurchaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTestPurchaseCompleted(this, new UpdateTestPurchaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/GetTestImages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestImage[] GetTestImages(uint testId, User user) {
            object[] results = this.Invoke("GetTestImages", new object[] {
                        testId,
                        user});
            return ((TestImage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTestImagesAsync(uint testId, User user) {
            this.GetTestImagesAsync(testId, user, null);
        }
        
        /// <remarks/>
        public void GetTestImagesAsync(uint testId, User user, object userState) {
            if ((this.GetTestImagesOperationCompleted == null)) {
                this.GetTestImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTestImagesOperationCompleted);
            }
            this.InvokeAsync("GetTestImages", new object[] {
                        testId,
                        user}, this.GetTestImagesOperationCompleted, userState);
        }
        
        private void OnGetTestImagesOperationCompleted(object arg) {
            if ((this.GetTestImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTestImagesCompleted(this, new GetTestImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SaveWebPages", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveWebPages(WebNode webNode, string uniqueId, User user) {
            object[] results = this.Invoke("SaveWebPages", new object[] {
                        webNode,
                        uniqueId,
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWebPagesAsync(WebNode webNode, string uniqueId, User user) {
            this.SaveWebPagesAsync(webNode, uniqueId, user, null);
        }
        
        /// <remarks/>
        public void SaveWebPagesAsync(WebNode webNode, string uniqueId, User user, object userState) {
            if ((this.SaveWebPagesOperationCompleted == null)) {
                this.SaveWebPagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWebPagesOperationCompleted);
            }
            this.InvokeAsync("SaveWebPages", new object[] {
                        webNode,
                        uniqueId,
                        user}, this.SaveWebPagesOperationCompleted, userState);
        }
        
        private void OnSaveWebPagesOperationCompleted(object arg) {
            if ((this.SaveWebPagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWebPagesCompleted(this, new SaveWebPagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.coderlabz.com/SendErrorMessage", RequestNamespace="http://www.coderlabz.com/", ResponseNamespace="http://www.coderlabz.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendErrorMessage(string message, User user) {
            this.Invoke("SendErrorMessage", new object[] {
                        message,
                        user});
        }
        
        /// <remarks/>
        public void SendErrorMessageAsync(string message, User user) {
            this.SendErrorMessageAsync(message, user, null);
        }
        
        /// <remarks/>
        public void SendErrorMessageAsync(string message, User user, object userState) {
            if ((this.SendErrorMessageOperationCompleted == null)) {
                this.SendErrorMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendErrorMessageOperationCompleted);
            }
            this.InvokeAsync("SendErrorMessage", new object[] {
                        message,
                        user}, this.SendErrorMessageOperationCompleted, userState);
        }
        
        private void OnSendErrorMessageOperationCompleted(object arg) {
            if ((this.SendErrorMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendErrorMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class UserInfo {
        
        private uint idField;
        
        private string emailField;
        
        private string passwordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string companyNameField;
        
        private bool varifiedField;
        
        private UserExtension userExtensionField;
        
        private string tempIdField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public bool Varified {
            get {
                return this.varifiedField;
            }
            set {
                this.varifiedField = value;
            }
        }
        
        /// <remarks/>
        public UserExtension UserExtension {
            get {
                return this.userExtensionField;
            }
            set {
                this.userExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string TempId {
            get {
                return this.tempIdField;
            }
            set {
                this.tempIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class UserExtension {
        
        private uint adminIdField;
        
        private string emailField;
        
        private string passwordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string noteField;
        
        private PrivilegeType questionsPrivilegeField;
        
        private PrivilegeType papersPrivilegeField;
        
        private PrivilegeType schedulesPrivilegeField;
        
        /// <remarks/>
        public uint AdminId {
            get {
                return this.adminIdField;
            }
            set {
                this.adminIdField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
        
        /// <remarks/>
        public PrivilegeType QuestionsPrivilege {
            get {
                return this.questionsPrivilegeField;
            }
            set {
                this.questionsPrivilegeField = value;
            }
        }
        
        /// <remarks/>
        public PrivilegeType PapersPrivilege {
            get {
                return this.papersPrivilegeField;
            }
            set {
                this.papersPrivilegeField = value;
            }
        }
        
        /// <remarks/>
        public PrivilegeType SchedulesPrivilege {
            get {
                return this.schedulesPrivilegeField;
            }
            set {
                this.schedulesPrivilegeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum PrivilegeType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        View,
        
        /// <remarks/>
        Edit,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestImage {
        
        private string nameField;
        
        private string streamField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Stream {
            get {
                return this.streamField;
            }
            set {
                this.streamField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class CompilerMessage {
        
        private bool successField;
        
        private string exeField;
        
        private string exe1Field;
        
        private string[] errorMessagesField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe1 {
            get {
                return this.exe1Field;
            }
            set {
                this.exe1Field = value;
            }
        }
        
        /// <remarks/>
        public string[] ErrorMessages {
            get {
                return this.errorMessagesField;
            }
            set {
                this.errorMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class Questions {
        
        private ObjectiveQuestion[] objectiveQuestionsField;
        
        private SqlQuestion[] sQLQuestionsField;
        
        private ProgrammingQuestion[] programmingQuestionsField;
        
        private AutoProgrammingQuestion[] autoProgrammingQuestionsField;
        
        private WebProgrammingQuestion[] webProgrammingQuestionsField;
        
        /// <remarks/>
        public ObjectiveQuestion[] ObjectiveQuestions {
            get {
                return this.objectiveQuestionsField;
            }
            set {
                this.objectiveQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public SqlQuestion[] SQLQuestions {
            get {
                return this.sQLQuestionsField;
            }
            set {
                this.sQLQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingQuestion[] ProgrammingQuestions {
            get {
                return this.programmingQuestionsField;
            }
            set {
                this.programmingQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public AutoProgrammingQuestion[] AutoProgrammingQuestions {
            get {
                return this.autoProgrammingQuestionsField;
            }
            set {
                this.autoProgrammingQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public WebProgrammingQuestion[] WebProgrammingQuestions {
            get {
                return this.webProgrammingQuestionsField;
            }
            set {
                this.webProgrammingQuestionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ObjectiveQuestion : QuestionBase {
        
        private string[] optionsField;
        
        private string[] answersField;
        
        /// <remarks/>
        public string[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestion))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class QuestionBase : ServiceDataBase {
        
        private QuestionType typeField;
        
        private string descField;
        
        private string[] categoriesField;
        
        private uint difficultyLevelField;
        
        private System.DateTime dateTimeCreatedField;
        
        private System.DateTime dateTimeModifiedField;
        
        private bool deletedField;
        
        /// <remarks/>
        public QuestionType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        public string[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public uint DifficultyLevel {
            get {
                return this.difficultyLevelField;
            }
            set {
                this.difficultyLevelField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeCreated {
            get {
                return this.dateTimeCreatedField;
            }
            set {
                this.dateTimeCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeModified {
            get {
                return this.dateTimeModifiedField;
            }
            set {
                this.dateTimeModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum QuestionType {
        
        /// <remarks/>
        Objective,
        
        /// <remarks/>
        Sql,
        
        /// <remarks/>
        Programming,
        
        /// <remarks/>
        AutoProgramming,
        
        /// <remarks/>
        WebProgramming,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestSchedule))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoPaper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Paper))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionLevel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(QuestionCategory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class ServiceDataBase {
        
        private uint idField;
        
        private uint adminIdField;
        
        private string tempIdField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint AdminId {
            get {
                return this.adminIdField;
            }
            set {
                this.adminIdField = value;
            }
        }
        
        /// <remarks/>
        public string TempId {
            get {
                return this.tempIdField;
            }
            set {
                this.tempIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestSchedule : ServiceDataBase {
        
        private uint paperIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string passwordField;
        
        private System.DateTime scheduleDateTimeField;
        
        private uint daysLimitField;
        
        private uint durationField;
        
        private System.DateTime testTakenDateTimeField;
        
        private TestStatus statusField;
        
        private bool liveImageField;
        
        private bool webReferenceField;
        
        private TestAnswers testAnswersField;
        
        /// <remarks/>
        public uint PaperId {
            get {
                return this.paperIdField;
            }
            set {
                this.paperIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ScheduleDateTime {
            get {
                return this.scheduleDateTimeField;
            }
            set {
                this.scheduleDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public uint DaysLimit {
            get {
                return this.daysLimitField;
            }
            set {
                this.daysLimitField = value;
            }
        }
        
        /// <remarks/>
        public uint Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TestTakenDateTime {
            get {
                return this.testTakenDateTimeField;
            }
            set {
                this.testTakenDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public TestStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool LiveImage {
            get {
                return this.liveImageField;
            }
            set {
                this.liveImageField = value;
            }
        }
        
        /// <remarks/>
        public bool WebReference {
            get {
                return this.webReferenceField;
            }
            set {
                this.webReferenceField = value;
            }
        }
        
        /// <remarks/>
        public TestAnswers TestAnswers {
            get {
                return this.testAnswersField;
            }
            set {
                this.testAnswersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum TestStatus {
        
        /// <remarks/>
        New,
        
        /// <remarks/>
        Taken,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        Disqualified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class TestAnswers {
        
        private uint testIdField;
        
        private ObjectiveQuestionTestAnswer[] objectiveQuestionTestAnswersField;
        
        private SqlQuestionTestAnswer[] sqlQuestionTestAnswersField;
        
        private ProgrammingQuestionTestAnswer[] programmingQuestionTestAnswersField;
        
        private AutoProgrammingQuestionTestAnswer[] autoProgrammingQuestionTestAnswersField;
        
        private WebProgrammingQuestionTestAnswer[] webPogrammingQuestionTestAnswersField;
        
        /// <remarks/>
        public uint TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public ObjectiveQuestionTestAnswer[] ObjectiveQuestionTestAnswers {
            get {
                return this.objectiveQuestionTestAnswersField;
            }
            set {
                this.objectiveQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public SqlQuestionTestAnswer[] SqlQuestionTestAnswers {
            get {
                return this.sqlQuestionTestAnswersField;
            }
            set {
                this.sqlQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingQuestionTestAnswer[] ProgrammingQuestionTestAnswers {
            get {
                return this.programmingQuestionTestAnswersField;
            }
            set {
                this.programmingQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public AutoProgrammingQuestionTestAnswer[] AutoProgrammingQuestionTestAnswers {
            get {
                return this.autoProgrammingQuestionTestAnswersField;
            }
            set {
                this.autoProgrammingQuestionTestAnswersField = value;
            }
        }
        
        /// <remarks/>
        public WebProgrammingQuestionTestAnswer[] WebPogrammingQuestionTestAnswers {
            get {
                return this.webPogrammingQuestionTestAnswersField;
            }
            set {
                this.webPogrammingQuestionTestAnswersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ObjectiveQuestionTestAnswer : TestAnswerBase {
        
        private int[] selectedOptionsField;
        
        /// <remarks/>
        public int[] SelectedOptions {
            get {
                return this.selectedOptionsField;
            }
            set {
                this.selectedOptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AutoProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WebProgrammingQuestionTestAnswer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectiveQuestionTestAnswer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public abstract partial class TestAnswerBase {
        
        private uint idField;
        
        private uint testIdField;
        
        private uint questionIdField;
        
        private QuestionType typeField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint TestId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        public uint QuestionId {
            get {
                return this.questionIdField;
            }
            set {
                this.questionIdField = value;
            }
        }
        
        /// <remarks/>
        public QuestionType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlQuestionTestAnswer : TestAnswerBase {
        
        private string sqlField;
        
        /// <remarks/>
        public string Sql {
            get {
                return this.sqlField;
            }
            set {
                this.sqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private string codeField;
        
        private string exeField;
        
        private string exeCodeField;
        
        private ProgrammingAnswerType answerTypeField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string ExeCode {
            get {
                return this.exeCodeField;
            }
            set {
                this.exeCodeField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingAnswerType AnswerType {
            get {
                return this.answerTypeField;
            }
            set {
                this.answerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum ProgrammingAnswerType {
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        CPP,
        
        /// <remarks/>
        CSharp,
        
        /// <remarks/>
        VBNET,
        
        /// <remarks/>
        Java,
        
        /// <remarks/>
        Algo,
        
        /// <remarks/>
        Desc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private string codeField;
        
        private string exeField;
        
        private string exeCodeField;
        
        private ProgrammingAnswerType answerTypeField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Exe {
            get {
                return this.exeField;
            }
            set {
                this.exeField = value;
            }
        }
        
        /// <remarks/>
        public string ExeCode {
            get {
                return this.exeCodeField;
            }
            set {
                this.exeCodeField = value;
            }
        }
        
        /// <remarks/>
        public ProgrammingAnswerType AnswerType {
            get {
                return this.answerTypeField;
            }
            set {
                this.answerTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebProgrammingQuestionTestAnswer : TestAnswerBase {
        
        private WebNode webNodeField;
        
        /// <remarks/>
        public WebNode WebNode {
            get {
                return this.webNodeField;
            }
            set {
                this.webNodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebNode {
        
        private WebNodeType typeField;
        
        private string nameField;
        
        private WebNode[] nodesField;
        
        private string contentField;
        
        /// <remarks/>
        public WebNodeType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public WebNode[] Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum WebNodeType {
        
        /// <remarks/>
        Directory,
        
        /// <remarks/>
        CSS,
        
        /// <remarks/>
        JavaScript,
        
        /// <remarks/>
        HTML,
        
        /// <remarks/>
        ASP_DOT_NET,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoPaper : ServiceDataBase {
        
        private string nameField;
        
        private string descField;
        
        private string configsField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        public string Configs {
            get {
                return this.configsField;
            }
            set {
                this.configsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class Paper : ServiceDataBase {
        
        private string nameField;
        
        private string descField;
        
        private string questionIdsField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateModifiedField;
        
        private bool isAutoField;
        
        private bool deletedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        public string QuestionIds {
            get {
                return this.questionIdsField;
            }
            set {
                this.questionIdsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAuto {
            get {
                return this.isAutoField;
            }
            set {
                this.isAutoField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class QuestionLevel : ServiceDataBase {
        
        private string descriptionField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class QuestionCategory : ServiceDataBase {
        
        private string nameField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlQuestion : QuestionBase {
        
        private SqlTable[] tablesField;
        
        private string expectedResultSqlField;
        
        /// <remarks/>
        public SqlTable[] Tables {
            get {
                return this.tablesField;
            }
            set {
                this.tablesField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedResultSql {
            get {
                return this.expectedResultSqlField;
            }
            set {
                this.expectedResultSqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class SqlTable {
        
        private string tableNameField;
        
        private string createTableSqlField;
        
        private string tableDataSqlField;
        
        /// <remarks/>
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreateTableSql {
            get {
                return this.createTableSqlField;
            }
            set {
                this.createTableSqlField = value;
            }
        }
        
        /// <remarks/>
        public string TableDataSql {
            get {
                return this.tableDataSqlField;
            }
            set {
                this.tableDataSqlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class ProgrammingQuestion : QuestionBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoProgrammingQuestion : QuestionBase {
        
        private AutoQuestionSignatureConfig configField;
        
        private AutoQuestionTestCase[] testCasesField;
        
        /// <remarks/>
        public AutoQuestionSignatureConfig Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
        
        /// <remarks/>
        public AutoQuestionTestCase[] TestCases {
            get {
                return this.testCasesField;
            }
            set {
                this.testCasesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoQuestionSignatureConfig {
        
        private AutoQuestionValueType returnTypeField;
        
        private string functionNameField;
        
        private FunctionInput[] inputsField;
        
        /// <remarks/>
        public AutoQuestionValueType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
        
        /// <remarks/>
        public FunctionInput[] Inputs {
            get {
                return this.inputsField;
            }
            set {
                this.inputsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public enum AutoQuestionValueType {
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Boolean,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class FunctionInput {
        
        private AutoQuestionValueType argTypeField;
        
        private string nameField;
        
        /// <remarks/>
        public AutoQuestionValueType ArgType {
            get {
                return this.argTypeField;
            }
            set {
                this.argTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class AutoQuestionTestCase {
        
        private bool isAllowedInTestModeField;
        
        private string expectedValueField;
        
        private string[] inputValuesField;
        
        /// <remarks/>
        public bool IsAllowedInTestMode {
            get {
                return this.isAllowedInTestModeField;
            }
            set {
                this.isAllowedInTestModeField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedValue {
            get {
                return this.expectedValueField;
            }
            set {
                this.expectedValueField = value;
            }
        }
        
        /// <remarks/>
        public string[] InputValues {
            get {
                return this.inputValuesField;
            }
            set {
                this.inputValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class WebProgrammingQuestion : QuestionBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.coderlabz.com/")]
    public partial class User {
        
        private uint idField;
        
        private string emailField;
        
        private string passwordField;
        
        /// <remarks/>
        public uint Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateUserInfoCompletedEventHandler(object sender, UpdateUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void ForgotPasswordCompletedEventHandler(object sender, ForgotPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CheckUserExistsCompletedEventHandler(object sender, CheckUserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void VarifyCodeCompletedEventHandler(object sender, VarifyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VarifyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VarifyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CreateNewCodeCompletedEventHandler(object sender, CreateNewCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetUserExtensionsCompletedEventHandler(object sender, GetUserExtensionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserExtensionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserExtensionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserExtension[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserExtension[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateUserExtensionCompletedEventHandler(object sender, UpdateUserExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveUserExtensionCompletedEventHandler(object sender, RemoveUserExtensionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserExtensionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserExtensionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionCategoriesCompletedEventHandler(object sender, GetQuestionCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionCategory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateQuestionCategoryCompletedEventHandler(object sender, UpdateQuestionCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuestionCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuestionCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveQuestionCategoryCompletedEventHandler(object sender, RemoveQuestionCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveQuestionCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveQuestionCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionLevelsCompletedEventHandler(object sender, GetQuestionLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionLevel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateQuestionLevelCompletedEventHandler(object sender, UpdateQuestionLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQuestionLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQuestionLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionLevel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionLevel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveQuestionLevelCompletedEventHandler(object sender, RemoveQuestionLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveQuestionLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveQuestionLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuestionLevel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuestionLevel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetNumberOfQuestionPagesCompletedEventHandler(object sender, GetNumberOfQuestionPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberOfQuestionPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberOfQuestionPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetNumberOfQuestionPageByQuestionTypeCompletedEventHandler(object sender, GetNumberOfQuestionPageByQuestionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberOfQuestionPageByQuestionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberOfQuestionPageByQuestionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionsCompletedEventHandler(object sender, GetQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Questions Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Questions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionsByQuestionTypeCompletedEventHandler(object sender, GetQuestionsByQuestionTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionsByQuestionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionsByQuestionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Questions Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Questions)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoadObjectiveQuestionCompletedEventHandler(object sender, LoadObjectiveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadObjectiveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadObjectiveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectiveQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectiveQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateObjectiveQuestionCompletedEventHandler(object sender, UpdateObjectiveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateObjectiveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateObjectiveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectiveQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectiveQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveObjectiveQuestionCompletedEventHandler(object sender, RemoveObjectiveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveObjectiveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveObjectiveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectiveQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectiveQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoadSqlQuestionCompletedEventHandler(object sender, LoadSqlQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSqlQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSqlQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SqlQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SqlQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateSqlQuestionCompletedEventHandler(object sender, UpdateSqlQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSqlQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSqlQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SqlQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SqlQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveSqlQuestionCompletedEventHandler(object sender, RemoveSqlQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveSqlQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveSqlQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SqlQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SqlQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoadProgrammingQuestionCompletedEventHandler(object sender, LoadProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateProgrammingQuestionCompletedEventHandler(object sender, UpdateProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveProgrammingQuestionCompletedEventHandler(object sender, RemoveProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoadAutoProgrammingQuestionCompletedEventHandler(object sender, LoadAutoProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAutoProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAutoProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateAutoProgrammingQuestionCompletedEventHandler(object sender, UpdateAutoProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAutoProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAutoProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveAutoProgrammingQuestionCompletedEventHandler(object sender, RemoveAutoProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAutoProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAutoProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void LoadWebProgrammingQuestionCompletedEventHandler(object sender, LoadWebProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadWebProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadWebProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateWebProgrammingQuestionCompletedEventHandler(object sender, UpdateWebProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateWebProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateWebProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveWebProgrammingQuestionCompletedEventHandler(object sender, RemoveWebProgrammingQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveWebProgrammingQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveWebProgrammingQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WebProgrammingQuestion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WebProgrammingQuestion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetPapersCompletedEventHandler(object sender, GetPapersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPapersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPapersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Paper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdatePaperCompletedEventHandler(object sender, UpdatePaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Paper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemovePaperCompletedEventHandler(object sender, RemovePaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemovePaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemovePaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetAutoPapersCompletedEventHandler(object sender, GetAutoPapersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAutoPapersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAutoPapersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoPaper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoPaper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateAutoPaperCompletedEventHandler(object sender, UpdateAutoPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAutoPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAutoPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoPaper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoPaper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveAutoPaperCompletedEventHandler(object sender, RemoveAutoPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAutoPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAutoPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AutoPaper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AutoPaper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetQuestionsCountByCategoryLevelTypeCompletedEventHandler(object sender, GetQuestionsCountByCategoryLevelTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionsCountByCategoryLevelTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionsCountByCategoryLevelTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void CreatePaperByAutoPaperCompletedEventHandler(object sender, CreatePaperByAutoPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePaperByAutoPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePaperByAutoPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Paper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetNumberOfTestSchedulePagesCompletedEventHandler(object sender, GetNumberOfTestSchedulePagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberOfTestSchedulePagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberOfTestSchedulePagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestSchedulesCompletedEventHandler(object sender, GetTestSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestSchedulesByFiltersCompletedEventHandler(object sender, GetTestSchedulesByFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestSchedulesByFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestSchedulesByFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestSchedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestSchedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateTestScheduleCompletedEventHandler(object sender, UpdateTestScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTestScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTestScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestSchedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestSchedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void RemoveTestScheduleCompletedEventHandler(object sender, RemoveTestScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveTestScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveTestScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestAnswersCompletedEventHandler(object sender, GetTestAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestAnswers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestAnswers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void AutoCompileCodeCompletedEventHandler(object sender, AutoCompileCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCompileCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCompileCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompilerMessage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompilerMessage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetWebsitesVisitedCompletedEventHandler(object sender, GetWebsitesVisitedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebsitesVisitedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebsitesVisitedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetApplicationsIgnoredCompletedEventHandler(object sender, GetApplicationsIgnoredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationsIgnoredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationsIgnoredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestsPurchasedCompletedEventHandler(object sender, GetTestsPurchasedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestsPurchasedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestsPurchasedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void UpdateTestPurchaseCompletedEventHandler(object sender, UpdateTestPurchaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTestPurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTestPurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void GetTestImagesCompletedEventHandler(object sender, GetTestImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTestImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTestImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestImage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestImage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SaveWebPagesCompletedEventHandler(object sender, SaveWebPagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWebPagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWebPagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void SendErrorMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591